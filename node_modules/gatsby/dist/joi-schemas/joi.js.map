{"version":3,"sources":["../../src/joi-schemas/joi.ts"],"names":["stripTrailingSlash","chain","replace","addLeadingSlash","when","Joi","string","uri","relativeOnly","then","gatsbyConfigSchema","object","keys","__experimentalThemes","array","polyfill","boolean","default","assetPrefix","allowRelative","pathPrefix","allow","siteMetadata","siteUrl","unknown","mapping","plugins","proxy","items","prefix","required","url","single","developMiddleware","func","error","Error","pageSchema","path","matchPath","component","componentChunkName","context","pluginCreator___NODE","pluginCreatorId","nodeSchema","id","children","forbidden","parent","fields","internal","contentDigest","mediaType","type","owner","fieldOwners","content","description","ignoreType","counter","number"],"mappings":"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","sourcesContent":["import Joi from \"@hapi/joi\"\nimport { IGatsbyConfig, IGatsbyPage, IGatsbyNode } from \"../redux/types\"\n\nconst stripTrailingSlash = (chain: Joi.StringSchema): Joi.StringSchema =>\n  chain.replace(/(\\w)\\/+$/, `$1`)\n\n// only add leading slash on relative urls\nconst addLeadingSlash = (chain: Joi.StringSchema): Joi.StringSchema =>\n  chain.when(Joi.string().uri({ relativeOnly: true }), {\n    then: chain.replace(/^([^/])/, `/$1`),\n  })\n\nexport const gatsbyConfigSchema: Joi.ObjectSchema<IGatsbyConfig> = Joi.object()\n  .keys({\n    __experimentalThemes: Joi.array(),\n    polyfill: Joi.boolean().default(true),\n    assetPrefix: stripTrailingSlash(\n      Joi.string().uri({\n        allowRelative: true,\n      })\n    ),\n    pathPrefix: addLeadingSlash(\n      stripTrailingSlash(\n        Joi.string()\n          .uri({\n            allowRelative: true,\n            relativeOnly: true,\n          })\n          .default(``)\n          // removes single / value\n          .allow(``)\n          .replace(/^\\/$/, ``)\n      )\n    ),\n    siteMetadata: Joi.object({\n      siteUrl: stripTrailingSlash(Joi.string()).uri(),\n    }).unknown(),\n    mapping: Joi.object(),\n    plugins: Joi.array(),\n    proxy: Joi.array()\n      .items(\n        Joi.object().keys({\n          prefix: Joi.string().required(),\n          url: Joi.string().required(),\n        })\n      )\n      .single(),\n    developMiddleware: Joi.func(),\n  })\n  // throws when both assetPrefix and pathPrefix are defined\n  .when(\n    Joi.object({\n      assetPrefix: Joi.string().uri({\n        allowRelative: true,\n        relativeOnly: true,\n      }),\n      pathPrefix: Joi.string()\n        .uri({\n          allowRelative: true,\n          relativeOnly: true,\n        })\n        .default(``),\n    }),\n    {\n      then: Joi.object({\n        assetPrefix: Joi.string()\n          .uri({\n            allowRelative: false,\n          })\n          .error(\n            new Error(\n              `assetPrefix must be an absolute URI when used with pathPrefix`\n            )\n          ),\n      }),\n    }\n  )\n\nexport const pageSchema: Joi.ObjectSchema<IGatsbyPage> = Joi.object()\n  .keys({\n    path: Joi.string().required(),\n    matchPath: Joi.string(),\n    component: Joi.string().required(),\n    componentChunkName: Joi.string().required(),\n    context: Joi.object(),\n    pluginCreator___NODE: Joi.string(),\n    pluginCreatorId: Joi.string(),\n  })\n  .unknown()\n\nexport const nodeSchema: Joi.ObjectSchema<IGatsbyNode> = Joi.object()\n  .keys({\n    id: Joi.string().required(),\n    children: Joi.array().items(Joi.string(), Joi.object().forbidden()),\n    parent: Joi.string().allow(null),\n    fields: Joi.object(),\n    internal: Joi.object()\n      .keys({\n        contentDigest: Joi.string().required(),\n        mediaType: Joi.string(),\n        type: Joi.string().required(),\n        owner: Joi.string().required(),\n        fieldOwners: Joi.object(),\n        content: Joi.string().allow(``),\n        description: Joi.string(),\n        ignoreType: Joi.boolean(),\n        counter: Joi.number(),\n      })\n      .unknown(false), // Don't allow non-standard fields\n  })\n  .unknown()\n"],"file":"joi.js"}