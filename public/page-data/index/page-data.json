{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Ykss","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"원문: JavaScript Memory Management: How to Avoid Common Memory Leaks and Improve Performance 애플리케이션을 최적화하는 데 도움이 되는 JS의 메모리 관리에 대해 설명합니다. javascript memory leak 목차 도입 자바스크립트 메모리 관리의 이해 1. 가비지 컬렉터 2. 스택…","fields":{"slug":"/translation/javascript_memory_management/"},"frontmatter":{"date":"March 30, 2023","title":"(번역) 🔥 자바스크립트 메모리 관리: 일반적인 메모리 누수를 방지하고 성능을 개선하는 방법","category":"Translation","draft":false}}},{"node":{"excerpt":"원문: 10 Web Development Trends in 2023 제 주관적인 의견으로는 웹 개발 환경이 몇 년(2016~2021년) 동안 발전이 더뎠지만, 작년부터 다시 많은 주목을 받기 시작했습니다. (이 글의 이미지를 가져온 State of JS도 참조하세요.) 이 글에서는 제가 본 새로운 웹 개발 트렌드 중 웹 개발자들 사이에서 계속 관심을 불러…","fields":{"slug":"/translation/10_web_development_trends_in_2023/"},"frontmatter":{"date":"March 06, 2023","title":"(번역) 2023년 웹 개발 트렌드 10가지","category":"Translation","draft":false}}},{"node":{"excerpt":"원문: Building and delivering frontends at scale 프런트엔드 빌드 도구 및 기술의 진화에 대해 자세히 알아보며, 상호작용이 가능한 대규모의 프런트엔드 서비스를 제공하기 위한 도전 과제를 이해해 보세요. 웹은 정적 미디어의 모방에서 크로스 플랫폼 소프트웨어를 배포하는 지배적인 방식으로 발전했습니다. 웹과 밀접한 관계를 맺고…","fields":{"slug":"/translation/building_and_delivering_frontends_at_scale/"},"frontmatter":{"date":"February 13, 2023","title":"(번역) 대규모 프런트엔드 프로젝트를 빌드하고 제공하기","category":"Translation","draft":false}}},{"node":{"excerpt":"원문: The evolution of scalable CSS 대규모 프로젝트에서 CSS를 확장할 때 발생하는 문제에 대해 자세히 알아보면서, CSS 모범 사례의 진화를 이해해 봅니다. 우리가 CSS를 작성하고 생각하는 방식은 웹이 시작된 이래로 크게 바뀌었습니다. 우리는 테이블 기반 레이아웃에서 반응형 웹 디자인에 이르기까지 먼 길을 왔으며, 이제 최신 …","fields":{"slug":"/translation/the_evolution_of_scalable_css/"},"frontmatter":{"date":"January 30, 2023","title":"(번역) 확장 가능한 CSS의 진화","category":"Translation","draft":false}}},{"node":{"excerpt":"작년부터 회고를 쓰기 시작했었는데, 한 해가 벌써 훌쩍지나 두 번째 회고, 이직 회고까지 포함하면 세 번쨰 회고를 쓰게 되었다. 올 한해는 정말 많은 일들이 있었고, 그 중에 긍정적인 변화들이 많아서 그런지 작년에 비해 회고를 작성하는게 훨씬 의욕적으로 느껴진다. 작년에 남겼던 회고와 같은 형식으로 회고를 작성해보려고 한다. 일 🏬 이직 올 한해 너무나도…","fields":{"slug":"/essay/review_2022/"},"frontmatter":{"date":"December 30, 2022","title":"2022년 회고 남겨보기","category":"Essay","draft":false}}},{"node":{"excerpt":"원문: Fun with console.log()💿 여러분이 웹 앱을 개발한 적이 있다면, 가 익숙 하실겁니다. 이 메서드는 개발자 콘솔에 데이터를 출력하며, 디버깅과 로깅, 그리고 테스트에 유용합니다. 을 실행하면, 여러분은  객체에 훨씬 더 많은 것이 있음을 알 수 있습니다. 이 포스트에서는 여러분의 로깅 경험을 향상할 수 있는 10가지 유용한 요령을 …","fields":{"slug":"/translation/fun-with-console-log/"},"frontmatter":{"date":"December 15, 2022","title":"(번역) console.log()와 함께하는 재미 💿","category":"Translation","draft":false}}},{"node":{"excerpt":"이 글을 통해 새로운 자바스크립트 웹 프레임워크의 확산에 대해 이해하고, 규모에 따른 문제와 최근 혁신의 진화에 대해 자세히 알아봅시다. 원문: The new wave of Javascript web frameworks 자바스크립트 생태계에서 최신을 따르는 것은 새가슴들에는 적합하지 않습니다. 업계에 새로 진입하는 사람들이 새로운 라이브러리, 프레임워크,…","fields":{"slug":"/translation/the_new_wave_of_javascript_web_frameworks/"},"frontmatter":{"date":"November 29, 2022","title":"(번역) 자바스크립트 웹 프레임워크의 새로운 흐름","category":"Translation","draft":false}}},{"node":{"excerpt":"Tailwind가 단지 인라인 CSS가 아닌 이유 원문: The Pros and Cons of TailwindCSS Tailwind는 최근 프런트엔드 생태계에서 그 어떤 CSS 프레임워크보다 빠르게 떠오르는 프레임워크가 되었습니다. 그럼에도 불구하고, Tailwind를 반대하는 사람들도 존재합니다. Tailwind의 전제는 코드를 스타일링하기 위해서 (2…","fields":{"slug":"/translation/the_pros_and_cons_of_tailwindcss/"},"frontmatter":{"date":"October 13, 2022","title":"(번역) Tailwind CSS의 장점과 단점","category":"Translation","draft":false}}},{"node":{"excerpt":"Forrest를 개발하던 중 드롭다운 메뉴를 개발하였다. 드롭다운 항목을 누르면 위 그림과 같이 옵션 리스트가 포함되는 형식의 화면이었다. 여기서 추가적으로 요청된 부분은 목록이 띄워져 있을 때, 목록 밖의 항목을 클릭하면 목록이 닫히도록 하는 요구 사항이었다. 이전에 리액트 네이티브 개발을 할 땐, 컴포넌트에 내장된  이벤트가 있어서 쉽게 해당 부분을 …","fields":{"slug":"/devlog/on_blur_event/"},"frontmatter":{"date":"September 23, 2022","title":"[DevLog]div에서 onBlur 이벤트 사용하기 - 드롭다운, 셀렉트","category":"DevLog","draft":false}}},{"node":{"excerpt":"원문: Unit testing with Jest, React, and TypeScript 💡 소프트웨어 테스트는 무엇인가요?  소프트웨어 테스트(Software Testing)은 소프트웨어 애플리케이션이나 제품이 의도된 대로 작동하는지 평가하고 확인하는 과정입니다. 테스팅을 통해 버그 방지, 개발 비용 절감, 성능 향상 등에 장점을 얻을 수 있습니다. 소…","fields":{"slug":"/translation/unit-testing-with-jest-react-and-typescript/"},"frontmatter":{"date":"September 22, 2022","title":"(번역) Jest, React 및 Typescript를 사용한 단위 테스트","category":"Translation","draft":false}}},{"node":{"excerpt":"타입스크립트에서 타입(Type)과 인터페이스(Interface)는 유사한 점이 매우 많고, 여러 경우에 자유롭게 혼용되어 사용 가능하다. 그러나 둘 사이에는 차이와 한계가 분명히 존재한다. 원시 타입(Primitive Types) 타입은 원시 타입(symbol, boolean, string, number, bigint, etc.)을 정의할 수 있다. 반면…","fields":{"slug":"/typescript/type_vs_interface/"},"frontmatter":{"date":"September 06, 2022","title":"[Typescript] 타입(Type)과 인터페이스(Interface)의 차이점","category":"Typescript","draft":false}}},{"node":{"excerpt":"원문: 500ms to 1.7ms In React: A Journey And A Checklist  이 글은 중국어로도 번역되어 있습니다. (by Qlly) Link1 Link2 모든 앱에서, 그리고 모든 개발자의 특정 개발 단계에서 성능 개선이 필요한 시기는 반드시 발생합니다. 리액트에서 성능을 개선하는 방법에 대한 매주 좋은 글과 자원이 있으며, 이 …","fields":{"slug":"/translation/500ms-to-1.7ms-in-react:-a-journey-and-a-checklist/"},"frontmatter":{"date":"August 31, 2022","title":"(번역) 리액트 성능 최적화, 500ms 에서 1.7ms 까지 : 그 여정과 체크리스트","category":"Translation","draft":false}}},{"node":{"excerpt":"프로그레시브 웹앱(Progressive Web App) 은 Google I/O 2016에서 처음 소개된 웹 기술로, 주로 PWA라고 불린다. 구글에서 정의한 PWA는 아래와 같다. PWA는 최고의 웹과 최고의 앱을 결합한 경험이다. 브라우저를 통해 처음 방문한 사용자에게 유용하며, 설치가 필요하지 않다. 사용자가 PWA와 관계를 점진적으로 형성할수록 성능…","fields":{"slug":"/web/pwa/"},"frontmatter":{"date":"August 20, 2022","title":"[PWA] 프로그레시브 웹앱(Progressive Web App)","category":"Web","draft":false}}},{"node":{"excerpt":"작업을 시연하기 위한 4가지 핵심 개요 원문: How to Talk About Software Changes Photo by Headway on Unsplash\n사진 출처 - Headway (Unsplash) 당신은 코드를 작성했습니다. 자 이제 어떻게 할까요? 불가피하게 당신은 다른 사람의 작업을 개선하게 될 것입니다. 어떻게 해야 원작자가 불쾌하지 않…","fields":{"slug":"/translation/how-to-talk-about-software-changes/"},"frontmatter":{"date":"August 16, 2022","title":"(번역) 소프트웨어 변경에 대해 이야기하는 방법","category":"Translation","draft":false}}},{"node":{"excerpt":"- Case 1 (remote 브랜치 정보가 갱신되지 않았을 때)  위와 같은 에러가 발생하는 경우는 원격의 브랜치를 찾지 못하는 경우이다. 위와 같은 경우에서는 remote 환경을 갱신해주어야 한다. ( 도 같은 역할을 할 수 있을 것으로 판단된다.) 해당 리포지토리에 있는 브랜치를 확인하기 위해서는 아래와 같은 방법으로 확인이 가능하다. - Case2…","fields":{"slug":"/github/checkout/"},"frontmatter":{"date":"July 28, 2022","title":"git remote 브랜치 갱신 및 remote 브랜치 가져오기(checkout)","category":"Git","draft":false}}},{"node":{"excerpt":"구글이 머터리얼 디자인 시스템을 공개하고 난 이후, 많은 테크 기업들은 각자 고유의 디자인 시스템 구축에 관심을 가지기 시작했고 각 기업 고유의 디자인 시스템을 만들고 사용하고 있다. 현재 국내 기업 중에도 토스, 라인, 쏘카, 지마켓 등 수 많은 기업들이 디자인 시스템을 구축하여 사용하고 있다. 디자인 시스템은 무엇이고, 왜 많은 기업들이 디자인 시스템…","fields":{"slug":"/web/design_system/"},"frontmatter":{"date":"July 26, 2022","title":"디자인 시스템(Design System)이란?","category":"Web","draft":false}}},{"node":{"excerpt":"리액트나 뷰와 같은 프레임워크(라이브러리)가 주로 사용되고 SPA가 프론트엔드 개발의 주를 이루면서 화면을 컴포넌트들로 나누고 설계하는 방식이 보편화 되었다. 기본적으로는  패턴을 사용하여 컴포넌트를 나누는 방식이 많이 사용되었다. 하지만 컴포넌트를 잘 이해하지 못하고 설계하면, 비슷한 컴포넌트를 반복해서 만들어서 재사용성을 떨어뜨리고 UI를 복잡하게 만…","fields":{"slug":"/web/atomic_design/"},"frontmatter":{"date":"July 04, 2022","title":"[디자인시스템] 아토믹 디자인(Atomic Design)","category":"Web","draft":false}}},{"node":{"excerpt":"Vue를 사용하면서 전역 상태관리 라이브러리로 Vuex를 주로 사용한다. (리액트의 Redux와 같은 존재..) Vue 공식 도큐멘테이션에서도 Vuex를 추천할만큼 대표적인 라이브러리라고 할 수 있다. 하지만 typescript와 함께 활용되는 부분에 대해서는 Vuex의 공식 문서에도 썩 자세히 나와있지 않다. 특히 주로 클래스 컴포넌트로 개발하는 개발자…","fields":{"slug":"/vue/vuex_typescript/"},"frontmatter":{"date":"June 28, 2022","title":"vuex + typescript (vuex-module-decorator, vuex-class)","category":"Vue","draft":false}}},{"node":{"excerpt":"는 typescript환경에서 vue를 클래스 타입으로 사용할 때 주로 사용하는 라이브러리이고 를 기반으로 만들어졌다.  라이브러리는 데코레이터(@)를 사용하여 클래스 스타일로 코딩할 수 있게 해주는 라이브러리이다. 1. @Component  데코레이터는 정의한 class를 Vue component로 만들어준다. data나 methods도 일반적인 클래스…","fields":{"slug":"/vue/vue-property-decorator/"},"frontmatter":{"date":"June 25, 2022","title":"vue-property-decorator (vue+typescript+class)","category":"Vue","draft":false}}},{"node":{"excerpt":"먼저 과 , 그리고 의 차이를 알아보자. 1. git pull 은 원격 저장소(remote)에 있는 최신 상태를 로컬 저장소로 받아와서 병합하는 명령어이다. 만약 로컬 저장소의 모든 변경 사항이 이미 원격 저장소에 반영되어 있고, remote에만 최신 사항이 있는 경우에는 fast-forward 병합이 이루어진다. 만약 원격 저장소에 있는 소스 상태와 현…","fields":{"slug":"/github/pull-rebase/"},"frontmatter":{"date":"June 24, 2022","title":"git pull vs git pull --rebase vs git rebase","category":"Git","draft":false}}},{"node":{"excerpt":"지금까지 주로 리액트 프로젝트나 사이드 프로젝트에서 리액트로 개발할 때, CRA를 통해서 프로젝트를 생성했다. 는 리액트 팀이 공식적으로 추천하는 보일러 플레이트로, HMR(Hot Module Replacement)와 같은 기능을 제공하고, 웹팩(webpack), 바벨(babel), ESlint 등을 포함하고 있고, 기본 config까지 해준다. 자바스크…","fields":{"slug":"/react/cra_versus_vite/"},"frontmatter":{"date":"June 19, 2022","title":"Vite 간단히 정리하기(with CRA)","category":"React","draft":false}}},{"node":{"excerpt":"Vue 인스턴스나 컴포넌트가 생성될 때, 사전에 정의된 몇 단계의 과정을 거치는데, 이것을 라이프 사이클이라고 한다. 즉, Vue 인스턴스가 생성되고 나타나고, 사라지기까지의 단계라고 할 수 있다. 아래는 공식 문서에서 제공하는 다이어그램이다. 뷰 인스턴스는 크게 생성(create)되고, DOM에 부착(mount)되고, 업데이트(update)되고, 없어지…","fields":{"slug":"/vue/lifecycle_hook/"},"frontmatter":{"date":"June 15, 2022","title":"Vue 라이프사이클 훅(Lifecycle Hook)","category":"Vue","draft":false}}},{"node":{"excerpt":"네비게이션 가드는 리다이렉션 하거나 취소해서 네비게이션을 보호하는데 사용된다. 상황에 따라 전역, 라우트별, 또는 컴포넌트 별로 네비게이션 가드를 등록해서 사용할 수 있다. Vue Router의 라이프사이클 훅 Flow 아래 그림과 같이 네비게이션 요청이 일어난 시점부터 DOM이 업데이트 될 때까지 시간에 따라 순차적으로 훅을 살펴보려고 한다.  befo…","fields":{"slug":"/vue/navigation_guard/"},"frontmatter":{"date":"June 13, 2022","title":"Vue 라우터 네비게이션 가드(vue router guard)","category":"Vue","draft":false}}},{"node":{"excerpt":"렌더링 속도를 올리기 위한 성능 최적화 방법 속성값(props)이나 상탯값(state)이 변경되면 리액트가 자동으로 컴포넌트 함수를 이용해서 화면을 다시 그린다. 리렌더링은 다음과 같은 과정을 거친다. 이전 렌더링 결과를 재사용할지 판단한다. 컴포넌트 함수를 호출한다. 가상 돔끼리 비교해서 변경된 부분만 실제 돔에 반영한다. 1번의 단계에서는 나 의 이전…","fields":{"slug":"/react/rendering_optimization/"},"frontmatter":{"date":"May 30, 2022","title":"리액트에서 렌더링 속도를 올리기 위한 성능 최적화","category":"React","draft":false}}},{"node":{"excerpt":"2021년 회고를 쓰고 얼마 지나지 않아 다시 회고를 쓸지는 상상도 하지 못했었는데, 감사하게도 이직을 하게되어 2년 10개월여간 몸담았던 회사를 떠나며 첫 직장을 떠나고 정리하는 마음으로 회고를 써보려고 한다. 사실 올해의 목표 중 이직은 매우 바래왔던 목표였지만, 현실적인 나에게 어떻게보면 현실과 먼 목표였고, 가장 가시적인 목표로는 회사 내에서 개발…","fields":{"slug":"/essay/review_autoever/"},"frontmatter":{"date":"April 26, 2022","title":"3년차 대기업 SI/SM 회고 & 이직 후기","category":"Essay","draft":false}}},{"node":{"excerpt":"이전에 깃험 액션을 맛보기만 했었는데, 이번에 사이드 프로젝트에서 주기적으로 푸시를 보내야하는 요건이 있었다. 만약 서버가 별도로 있다면, 서버에 스케줄링을 걸어서 푸시 배치 잡을 실행하는 방법으로 했을 수 있겠지만, 이번 프로젝트의 경우 Serverless로 구글 파이어스토어를 사용하는 프로젝트였다. 그렇기 때문에 자연스럽게 파이어베이스의 클라우드 메시…","fields":{"slug":"/github/push_noti_github_action/"},"frontmatter":{"date":"April 05, 2022","title":"[DevLog] 깃헙액션(github action)을 활용하여 푸시알림 보내기","category":"Git","draft":false}}},{"node":{"excerpt":"클로저는 쉽게 이해하거나 설명하기 어려운 개념일 수 있다. 1. closure의 의미 사전적 의미 : 중단하다, 폐쇄하다 자바스크립트에 함수 스코프가 있고, 함수 내부에서 정의된 변수는 함수의 어떤 부분에서도 접근 가능하다. 즉, 내부 함수에서 자신을 포함하는 외부 함수의 스코프에 접근할 수 있다는 이야기이다. 내부 함수가 외부 함수보다 오래 살아있는 경…","fields":{"slug":"/javascript/about_closure/"},"frontmatter":{"date":"April 03, 2022","title":"클로저 정리하기","category":"Javascript","draft":false}}},{"node":{"excerpt":"스코프는 이름이 충돌하는 문제를 덜어주고, 자동으로 메모리를 관리한다. 자바스크립트의 유효 범위 전역 스코프 함수 스코프 블록 스코프(ES6) 1. 전역 스코프 스크립트 어디에서든 접근이 가능한 스코프로 협업과 라이브러리 사용시 충돌 가능성이 있다. 2. 함수 스코프 함수 내부에서 정의된 변수와 매개변수는 함수 외부에서 접근할 수 없다. 함수 내부에서 정…","fields":{"slug":"/javascript/about_scope/"},"frontmatter":{"date":"March 26, 2022","title":"자바스크립트 타입 정리 (원시, 참조, 원시래퍼)","category":"Javascript","draft":false}}},{"node":{"excerpt":"1. 함수의 형태 함수에는 두 가지 리터럴 형태가 있다. 함수 선언 함수 선언언 function 키워드 뒤로 함수의 이름을 적어서 선언한다. 함수 선언 방식의 경우, 호이스팅이 일어나서 가장 위로 끌올 되어 선언된다. 함수 표현식 함수 표현식은 function 키워드 뒤로 이름없이 사용한다. 이름이 없어 익명 함수로도 불린다. 함수 표현식 방식의 경우 호…","fields":{"slug":"/javascript/about_hoisting/"},"frontmatter":{"date":"March 19, 2022","title":"JS 호이스팅 다시 살펴보기","category":"Javascript","draft":false}}},{"node":{"excerpt":"1. 원시 타입(primitive type) boolean number string null undefined 원시 값을 변수에 할당하면 값이 복사되어 들어간다. 즉, 원시값이 할당된 변수는 자기 자신의 고유한 값을 가지게 된다. typeof 원시 값의 종류를 알 수 있는 메서드이지만, null의 경우 타입을 주의해야 한다. null을 typeof 할 경…","fields":{"slug":"/javascript/about_type/"},"frontmatter":{"date":"March 18, 2022","title":"자바스크립트 타입 정리 (원시, 참조, 원시래퍼)","category":"Javascript","draft":false}}},{"node":{"excerpt":"1) this의 존재 이유 this를 통해 함수를 다른 객체에서도 재사용할 수 있다. 2) apply, call, bind 일반적으로 this 값은 자동 할당되지만 call, apply, bind는 this를 제어하기 위해 사용된다. call()과 apply()의 차이는 call()은 함수를 실행할 때 전달할 인수를 하나씩 전달하지만 apply()는 전달…","fields":{"slug":"/javascript/about_this/"},"frontmatter":{"date":"March 17, 2022","title":"this 파헤치기 (call, apply, bind)","category":"Javascript","draft":false}}},{"node":{"excerpt":"문제 설명 1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다. 제한 사항 입력된 수, num은 1 이상 8000000 미만인 정수입니다. 입출력 예 n result 6 8 16 4 626331 -1 내 코드 문제에 나온 조건 그대…","fields":{"slug":"/algorithm/programmers_87/"},"frontmatter":{"date":"March 13, 2022","title":"[프로그래머스] 콜라츠 추측 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요. 제한 조건 x는 1 이상, 10000 이하인 정수입니다. 입출력 예 …","fields":{"slug":"/algorithm/programmers_86/"},"frontmatter":{"date":"March 12, 2022","title":"[프로그래머스] 하샤드 수 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요. 제한 조건 x는 -10000000 이상, 10000000 이하인 정수입니다.\nn은 1000 이하인 자연수입니다. 입출력 예 x n …","fields":{"slug":"/algorithm/programmers_85/"},"frontmatter":{"date":"March 10, 2022","title":"[프로그래머스] x만큼 간격이 있는 n개의 숫자 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요. 제한 사항 문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다.\n첫…","fields":{"slug":"/algorithm/programmers_84/"},"frontmatter":{"date":"March 04, 2022","title":"[프로그래머스] 이상한 문자 만들기 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 4,3,2,1인 경우는 4,3,2를 리턴 하고, 10면 -1을 리턴 합니다. 제한 조건 arr은 길이 1 이상인 배열입니다.\n인덱스 i, j에…","fields":{"slug":"/algorithm/programmers_83/"},"frontmatter":{"date":"March 02, 2022","title":"[프로그래머스] 제일 작은 수 제거하기 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다.\n전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 *으로 가린 문자열을 리턴하는 함수, solution을 완성해주세요. 제한 조건 s는 길이 4 이상, 20이하인 문자열입니다. 입출력 예 p…","fields":{"slug":"/algorithm/programmers_82/"},"frontmatter":{"date":"March 01, 2022","title":"[프로그래머스] 핸드폰 번호 가리기 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다. 예를 들어 array가 1, 5, 2, 6, 3, 7, 4, i = 2, j = 5, k = 3이라면 array의 2번째부터 5번째까지 자르면 5, 2, 6, 3입니다.\n1에서 나온 배열을 정렬하면 2, 3, 5, 6입니다.\n2에서 나온 …","fields":{"slug":"/algorithm/programmers_81/"},"frontmatter":{"date":"February 28, 2022","title":"[프로그래머스] K번째수 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요. 제한 조건 행렬 arr1, arr2의 행과 열의 길이는 500을 넘지 않습니다. 입출력 예 arr1 arr2 return [1,2,…","fields":{"slug":"/algorithm/programmers_80/"},"frontmatter":{"date":"February 22, 2022","title":"[프로그래머스] 행렬의 덧셈 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다. 마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요. 제한사항 …","fields":{"slug":"/algorithm/programmers_79/"},"frontmatter":{"date":"February 18, 2022","title":"[프로그래머스] 완주하지 못한 선수 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"RN 개발 중에 스스로 맟닥뜨렸던 여러가지 이슈들이 있었다. 그 이슈들을 일일히 다 정리하지는 못했고, 진짜 구글링덕분에 해결한 문제들이 너무 많았지만, 구글링으로도 쉽게 해결되지 않았던 문제들은 스스로 정리해보려고 한다. 사실 나의 구글링 스킬이 부족해서 해당 답을 찾지 못했을 수도 있고, 너무 당연한 문제였어서, 나만 문제점으로 여겼을 수 있지만, 그…","fields":{"slug":"/react-native/clickable_event/"},"frontmatter":{"date":"February 14, 2022","title":"[리액트네이티브] Clickable Component Event Propagation(이벤트 전파, 상속)","category":"ReactNative","draft":false}}},{"node":{"excerpt":"문제 설명 정수를 담고 있는 배열 arr의 평균값을 return하는 함수, solution을 완성해보세요. 제한사항 arr은 길이 1 이상, 100 이하인 배열입니다.\narr의 원소는 -10,000 이상 10,000 이하인 정수입니다. 입출력 예 arr return 1,2,3,4 2.5 5,5 5 내 코드 파이썬에서 당연하게 썼던  함수가 없어서 당황했지…","fields":{"slug":"/algorithm/programmers_78/"},"frontmatter":{"date":"February 14, 2022","title":"[프로그래머스] 평균 구하기 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 5,4,3,2,1을 리턴합니다. 제한 조건 n은 10,000,000,000이하인 자연수입니다. 입출력 예 n return 12345 5,4,3,2,1 내 코드 먼저 숫자 n을 문자열로 만들고 을 통하여 배열로 만든 후에 그걸 뒤집었다. 문제…","fields":{"slug":"/algorithm/programmers_77/"},"frontmatter":{"date":"February 12, 2022","title":"[프로그래머스] 자연수 뒤집어 배열로 만들기 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 정수 배열 numbers가 주어집니다. numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 return 하도록 solution 함수를 완성해주세요. 제한사항 numbers의 길이는 2 이상 100 이하입니다.\nnumbers의 모든 수는 0 이상 100 이하입니다. 입출력 예 n…","fields":{"slug":"/algorithm/programmers_75/"},"frontmatter":{"date":"February 11, 2022","title":"[프로그래머스] 두 개 뽑아서 더하기 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다. 제한 조건 n은 1이상 8000000000 이하인 자연수입니다. 입출력 예 n return 118372 873211 내 코드 이 문제도 간단하게 풀 수…","fields":{"slug":"/algorithm/programmers_76/"},"frontmatter":{"date":"February 11, 2022","title":"[프로그래머스] 정수 내림차순으로 배치하기 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.\n예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다. 제한사항 N의 범위 : 100,000,000 이하의 자연수 입출력 예 N answer 123 6 987 24 내 코드 자릿수를 더하는 문제라 처음에는 천의…","fields":{"slug":"/algorithm/programmers_74/"},"frontmatter":{"date":"February 10, 2022","title":"[프로그래머스] 자릿수 더하기 - 자바스크립트","category":"Algorithm","draft":false}}},{"node":{"excerpt":"지금껏 여러 블로그를 보면서 회고 글을 많이 봤었다. 하지만 직접 회고를 작성해 본 적은 없었는데, 한 해를 돌아보며 기록한다는 것이 생각해보면 여러모로 의미있는 것 같아서 회고를 작성해본다. 사실 회고를 쓸 만큼 뭔가 거창한 걸 하진 않았지만, 그래도 기록 자체로도 그 의미가 충분하다는 생각이 든다! 일 🏬 4개의 프로젝트 PM 작년 회사에서의 일을 돌…","fields":{"slug":"/essay/review_2021/"},"frontmatter":{"date":"January 13, 2022","title":"2021년 회고 남겨보기","category":"Essay","draft":false}}},{"node":{"excerpt":"아이템 49 : 콜백에서 this에 대한 타입 제공하기 자바스크립트에서 는 다이나믹 스코프이다. 그렇기 때문에 정의된 방식이 아닌 호출된 방식에 따라 달라진다. 위에서 는 실제로 두 가지 작업을 수행하는데, 를 호출하고, 의 값을 로 바인딩한다. 위에서는 를 로 바인딩한것이다. 자바스크립트에서는 이런 경우에 메서드를 사용하여 를 명시적으로 바인딩하여 문제…","fields":{"slug":"/typescript/effective_ts(7)/"},"frontmatter":{"date":"December 30, 2021","title":"[Typescript] 이펙티브 타입스크립트 정리(아이템49 ~ 56)","category":"Typescript","draft":false}}},{"node":{"excerpt":"아이템 41 : any의 진화를 이해하기 any 타입은 확장되며 진화할 수 있다. 분기에 따라서 변경될 수도 있다. 하지만 any 타입은 noImplicitaAny가 설정된 상태에서 타입이 암시적 any인 경우에만 일어난다. 명시적으로 any를 선언하면 타입이 그대로 유지된다. any 탕비의 진화는 암시적 any 타입에 어떤 값을 할당할때만 발생한다. 요…","fields":{"slug":"/typescript/effective_ts(6)/"},"frontmatter":{"date":"December 28, 2021","title":"[Typescript] 이펙티브 타입스크립트 정리(아이템41 ~ 48)","category":"Typescript","draft":false}}},{"node":{"excerpt":"아이템 33 : string 타입보다 더 구체적인 타입 사용하기 위와 같이 무작정  으로 쓰는 건 피해야 한다. 위와 같이 유니온 타입을 정의해서 사용하고, 날짜 같은 경우 Date 객체로 사용해서 날짜 형식만 입력할 수 있도록하는 것이 낫다. 이렇게 하면 세가지 장점이 있다. 타입을 명시적으로 정의하여 다른 곳으로 값이 전달되어도 타입 정보가 유지된다.…","fields":{"slug":"/typescript/effective_ts(5)/"},"frontmatter":{"date":"December 27, 2021","title":"[Typescript] 이펙티브 타입스크립트 정리(아이템33 ~ 40)","category":"Typescript","draft":false}}},{"node":{"excerpt":"아이템 25 : 비동기 코드에는 콜백 대신 async 함수 사용하기 콜백이 중첩된 코드는 직관적으로 이해하기 어렵고 가독성이 떨어진다. -> 그래서 등장한 것이 promise였고, 과 문법이 등장했다. -> ES2017에서는 와  문법이 등장해서 더욱 간단하게 처리가 가능해졌다. 콜백보다 프로미스 문법을 사용해야 되는 이유 프로미스가 코드를 작성하기 쉽다…","fields":{"slug":"/typescript/effective_ts(4)/"},"frontmatter":{"date":"December 25, 2021","title":"[Typescript] 이펙티브 타입스크립트 정리(아이템25 ~ 32)","category":"Typescript","draft":false}}},{"node":{"excerpt":"아이템 9 : 타입 단언보다는 타입 선언을 사용하기 타입스크립트에서 변수에 값을 할당하고 타입을 부여하는 방법은 아래와 같이 두 가지이다. 은 타입 단언으로 타입스크립트가 추론한 타입이 있더라도  타입으로 간주한다. 하지만 타입 단언보다 타입 선언이 낫다. 위 예시와 같이 타입 단언의 경우는 강제로 타입을 지정해서 타입 체커가 오류를 무시하기 때문이다. …","fields":{"slug":"/typescript/effective_ts(2)/"},"frontmatter":{"date":"December 12, 2021","title":"[Typescript] 이펙티브 타입스크립트 정리(아이템9 ~ 16)","category":"Typescript","draft":false}}},{"node":{"excerpt":"RTK Query는 데이터를 가져오고(fetching), 캐싱하는(caching) 강력한 도구이다. 데이터를 가져오고 캐싱하는 로직을 번거롭게 작성하지 않고 단순화시켜준다. RTK 쿼리는 Redux Tookit 패키지에 포함된 선택적 애드온이다. 1. RTK 쿼리 등장 배경 웹 애플리케이션에서 화면에 데이터를 보여주기 위해서 서버로 부터 데이터를 가져오고…","fields":{"slug":"/react/rtk_query/"},"frontmatter":{"date":"December 10, 2021","title":"[Redux] RTK Query 란?","category":"React","draft":false}}},{"node":{"excerpt":"1장. 타입스크립트 알아보기 아이템1 : 타입스크립트와 자바스크립트 관계 이해하기 타입스크립트는 자바스크립트의 슈퍼셋이다. 기존에 존재하는 자바스크립트 코드를 타입스클비트로 마이그레이션 하는 것은 기존 코드에서 일부분에만 타입스크립트 적용이 가능하기 때문에 엄청난 이점이라고 할 수 있다. 모든 자바스크립트 프로그램은 타입스크립트이지만, 모든 타입스크립트 …","fields":{"slug":"/typescript/effective_ts(1)/"},"frontmatter":{"date":"December 03, 2021","title":"[Typescript] 이펙티브 타입스크립트 정리(아이템1 ~ 8)","category":"Typescript","draft":false}}},{"node":{"excerpt":"이번에 리액트 웹은 아니지만, 리액트 네이티브로 프로젝트를 진행하면서, 상태 관리를 위해 Redux를 사용하기로 했다. 그러다가 Redux의 복잡한 설정과 구성을 피해줄 수 있는 Redux Toolkit이라는 것을 알게 되었고, 실제로 적용해보니 기존 Redux에 비해서 훨씬 간단한게 설정할 수 있었다. 이번 기회에 제대로 알고 사용해보고자 Redux T…","fields":{"slug":"/react/redux_toolkit/"},"frontmatter":{"date":"October 21, 2021","title":"[Redux] Redux Toolkit 알아보기","category":"React","draft":false}}},{"node":{"excerpt":"타입스크립트에서 중요한 개념 중 하나인 제네릭에 대해서 정리해보려고 한다. 타입스크립트 코드를 보다보면 자주 보이는 것이 와 같은 형태의 코드인데, 이런게 바로 제네릭을 사용한 모습이다. 이전에도 다른 언어를 공부할 때도 제네릭에 대한 것은 들어본 적이 있었지만 제대로 활용한 적은 없었던 것 같아서 이번 기회에 정리하면서 실제로 사용해보려고 한다. 제네릭…","fields":{"slug":"/typescript/typescript_generic/"},"frontmatter":{"date":"October 14, 2021","title":"[Typescript] 제네릭","category":"Typescript","draft":false}}},{"node":{"excerpt":"저번 포스트 소개하는 않았지만 그럼에도 유용한 유틸리티 타입들이 많아서 추가적으로 몇가지 소개하고자 한다. 자주 사용하는 유틸리티 타입 알아보기 1. keyof  키워드는 특정 interface에서 key들만 union 형태로 받을 수 있다. 아래 예시를 보면 인터페이스의 key 값들만 받아서 하나의 타입으로 사용할 때, 유용하게 쓰일 수 있음을 알 수 …","fields":{"slug":"/typescript/typescript_utility2/"},"frontmatter":{"date":"October 13, 2021","title":"[Typescript] 유틸리티 타입 정리(2)","category":"Typescript","draft":false}}},{"node":{"excerpt":"타입스크립트 개발을 진행하면서 타입스크립트에 대해서 여러가지 배워가고 있다. 그 중에 type들이나 interface 등을 새롭게 공부하면서 유틸리티 타입에 대해서 접하게 되었고, 다양한 유틸리티 타입에 대해서 정리해보려고 한다. 1. 유틸리티 타입 유틸리티 타입은 이미 정의해 놓은 타입을 변환하여 사용할 때 주로 사용하는 문법이다. 기존의 인터페이스와 …","fields":{"slug":"/typescript/typescript_utility/"},"frontmatter":{"date":"October 09, 2021","title":"[Typescript] 유틸리티 타입 정리","category":"Typescript","draft":false}}},{"node":{"excerpt":"최근 기업들의 공고를 보면 기술 스택에서 yarn berry를 심심찮게 볼 수 있었다. 보통 은 과 함께 패키지 관리 도구로 양대산맥을 이루고 있기 때문에 알고있지만, 에 대해서는 아직 알지 못하기 때문에 한번 이번 기회에 어떤 것인지 정리하고 어떤 부분 때문에 요즘 잘 쓰이고 있는지 간결하게 정리해보고자 한다. 1. yarn berry가 등장한 배경 y…","fields":{"slug":"/web/yarn_berry/"},"frontmatter":{"date":"September 27, 2021","title":"Yarn berry는 무엇일까?","category":"Web","draft":false}}},{"node":{"excerpt":"Expo에 대해서 알아보다 보면, Expo는 웹 기반 개발을 하다가 RN을 시작한 개발자들에게는 매우 좋은 여러가지 이점을 제공하는 것을 분명히 알 수 있었다. 장점을 간단하게 정리해보면 Expo를 통해 앱 배포까지 손쉽게 할 수 있고, 네이티브를 조금 더 알아야 하는  파일과 같은 설정을 직접안해도 된다는 장점이 있다. 또 Expo Go 앱을 통해서 쉽…","fields":{"slug":"/react-native/expo_eject/"},"frontmatter":{"date":"September 23, 2021","title":"[리액트네이티브] Expo와 Expo Eject","category":"ReactNative","draft":false}}},{"node":{"excerpt":"Flux는 페이스북에서 MVC의 단점을 보완하기 위해 발표한 디자인 패턴으로 React.js의 Redux 디자인 패턴으로 유명하다. 저번에 알아본 MVC 패턴하고 자주 비교되곤 한다. 지금은 Redux가 당연한 것 처럼 쓰고 있지만 이전에 Flux 패턴이 먼저 발표되고, Flux 패턴을 적용한 패키지인 Redux가 등장하게 된 것이다. 1. 기존 MVC …","fields":{"slug":"/react/flux/"},"frontmatter":{"date":"September 18, 2021","title":"[디자인패턴] Flux 패턴은 무엇일까","category":"React","draft":false}}},{"node":{"excerpt":"처음 RN으로 앱을 만들어보면서 자연스럽게 expo를 쓰면 좋다! 해서 Expo를 사용해서 개발해본게 처음이었는데, 막상 새로운 프로젝트를 기획하면서 Expo를 써야할지 말아야할지에 대해서 고민할 때, 제대로 알고있지 못했기 때문에 써야할지 말아야할지는 판단할 수 없었다. 그래서 이번 포스트를 통해 Expo에 대해서 정리해보려고 한다. 1. Expo란? …","fields":{"slug":"/react-native/expo/"},"frontmatter":{"date":"September 16, 2021","title":"[리액트네이티브] Expo 정리하기","category":"ReactNative","draft":false}}},{"node":{"excerpt":"MVC, MVVM 등 이러한 디자인 패턴 용어는 웹 개발을 하다보면 자연스럽게 알게되는 패턴이다. 이러한 패턴들은 화면에 보여주는 로직과 실제 데이터가 처리되는 로직을 분리하기 위해 생겨났다. 하지만 이러한 패턴들이 서로 어떤 차이가 있는지를 확실히 아는게 중요하다는 생각이 들어서 이번 기회에 정리해보려고 한다. 1. MVC 가장 처음 들었었고, 가장 유…","fields":{"slug":"/web/design_pattern/"},"frontmatter":{"date":"September 14, 2021","title":"[디자인패턴] mvc vs mvp vs mvvm","category":"Web","draft":false}}},{"node":{"excerpt":"최근 개발을 진행하다보면 GraphQL이라는 것을 자주 들어보게 되었다. 하지만 정작 이 무엇인지는 알지 못하다보니 알아봐야 겠다는 생각이 들어서 이번 포스트를 통해 정리하고자 한다. 1. 이란? 은 페이스북에서 만든 쿼리 언어이다. 아직 역사가 오래되지는 않았으나, 최근 인기가 매우 가파르게 상승하고 있다. 아래 트렌드를 보면 꾸준히 증가하고 있는 추세…","fields":{"slug":"/web/graphql/"},"frontmatter":{"date":"September 12, 2021","title":"GraphQL 알아보기","category":"Web","draft":false}}},{"node":{"excerpt":"는 스타일링을 위한 라이브러리로 CSS-in-JS 방식의 라이브러리 중 하나이다. CSS-in-JS 방식은 css 스타일시트를 따로 두지 않고 자바스크립트 코드 안에서 스타일링을 하는 방식을 말한다. emotion.js는 바닐라 자바스크립트와 같이 프레임워크를 사용하지 않는 환경이나, React와 함께 주로 사용된다. CSS-in-JS를 쓰려고 하는 이유…","fields":{"slug":"/web/emotionjs/"},"frontmatter":{"date":"September 10, 2021","title":"[styling] Emotion.js 알아보기","category":"Web","draft":false}}},{"node":{"excerpt":"이번에 동아리 협업에 앞서 사전 준비를 위해 여러가지 이야기를 나누던 중에 정말 내가 모르는 많은 서비스와 개념들이 있다는 것을 깨닫게 되었다. 그 중에 Git flow와 Github flow에 대해서 무슨 이야기를 하는지 몰랐었는데, 협업 시에 커밋을 위한 방법론, Branch 전략에 대한 이야기였다. 실질적으로 알아보고 나니 내가 실제 적용했던 방법이…","fields":{"slug":"/github/github flow/"},"frontmatter":{"date":"September 09, 2021","title":"[Github] Git Branch Strategy 알아보기(GitFlow,GithubFlow)","category":"Git","draft":false}}},{"node":{"excerpt":"이전 포스트에서 Flex 방식에 대해서 알아보았는데, Flex 방식과 같이 레이아웃을 위해 많이 쓰이는 Grid 방식에 대해서 알아보자. 1. Grid는? Grid 방식은 레이아웃의 끝판왕이라고 불리는데, 그렇다면 Flex와 어떤 차이가 있을까? Flex 방식은 한 방향으로 레이아웃하는 1차원 방식이라고 할 수 있고, Grid 방식은 두 방향 레이아웃을 …","fields":{"slug":"/web/grid/"},"frontmatter":{"date":"September 07, 2021","title":"[CSS] Grid 레이아웃 알아보기","category":"Web","draft":false}}},{"node":{"excerpt":"웹 페이지를 구성할 때, 다양한 레이아웃의 방식이 존재한다. float와 inline-block도 있고, 이번에 공부해볼 flex도 그 방법 중 하나이다. 최근 개발을 하면서 flex를 통한 레이아웃을 많이 사용하기 때문에, 이것에 대해 제대로 알고 정리하면 좋을 것 같아서 이렇게 공부하면서 정리한다. 1. Flex는? Flex는 Flexible Box …","fields":{"slug":"/web/flex/"},"frontmatter":{"date":"September 03, 2021","title":"[CSS] Flex 레이아웃 알아보기","category":"Web","draft":false}}},{"node":{"excerpt":"반응형 웹을 구현하기 위해서 주로 사용되는게 미디어 쿼리이다. 미디어 쿼리는 화면(screen)이나 티비(TV) 같은 미디어 타입과 하나의 표현식으로 구성된다. width, height 등 미디어 특성을 활용해서 그 특성에 따라 다른 스타일을 적용해 줄 수 있도록 하는 것이 그 포인트이다. 이것을 무려 CSS로 구현이 가능하다. 물론 자바스크립트로도 당연…","fields":{"slug":"/web/media_query/"},"frontmatter":{"date":"September 01, 2021","title":"[CSS] 미디어 쿼리 활용하기","category":"Web","draft":false}}},{"node":{"excerpt":"이번에 리액트 네이티브를 처음 사용하면서, 일단 익숙하다는 핑계로 제대로 알아보지도 않고 를 사용하려고 했다. 기본적으로 리액트 네이티브에서는 을 이용해서 스타일링하기 때문에 어떤 방법으로 스타일링하는게 좋을지, 또는 둘 다 함께 혼용해도 괜찮을지에 대해서 알아보려고 한다. 1. React-Native의 스타일링 기본적으로 React Native의 경우 …","fields":{"slug":"/react-native/styled-component_in_RN/"},"frontmatter":{"date":"August 24, 2021","title":"[리액트네이티브] RN에서 styled-component 사용하기","category":"ReactNative","draft":false}}},{"node":{"excerpt":"UI를 서버에서 렌더링하는게 서버 사이드 렌더링이다. 리액트는 보통 클라이언트 사이드 렌더링을 하고 있다. 그래서 자바스크립트를 실행해야 화면이 보인다. 20.1.1 서버사이드렌더링의 장점 검색엔진 최적화(SEO) 검색엔진이 해당 웹 서비스의 페이지를 원활하게 수집할 수 있도록 한다. 초기 렌더링 개선 일반적으로 CSR을 하면 자바스크립트가 로딩될 때까지…","fields":{"slug":"/react/react_skills(12)/"},"frontmatter":{"date":"July 18, 2021","title":"리액트 다루는 기술 정리 (12) - 서버 사이드 렌더링","category":"React","draft":false}}},{"node":{"excerpt":"React 전역 상태관리 라이브러리가 많이 등장하고 있는데, 대표적으로 가장 많이 쓰이는 라이브러리는 단연 Redux이다. 그리고 그 다음이 Mobx정도라고 할 수 있다. 그리고 최근에 페이스북에서 만든 상태관리를 위한 Recoil이 뜨고있다. 이러한 상황에서 나는 Redux정도만 사용해보았기 때문에 redux와 mobx, recoil을 비교하며 각각의 …","fields":{"slug":"/react/redux_mobx_recoil/"},"frontmatter":{"date":"July 16, 2021","title":"Redux vs Mobx vs Recoil","category":"React","draft":false}}},{"node":{"excerpt":"문제 설명 네오와 프로도가 숫자놀이를 하고 있습니다. 네오가 프로도에게 숫자를 건넬 때 일부 자릿수를 영단어로 바꾼 카드를 건네주면 프로도는 원래 숫자를 찾는 게임입니다. 다음은 숫자의 일부 자릿수를 영단어로 바꾸는 예시입니다. 1478 → “one4seveneight”\n234567 → “23four5six7”\n10203 → “1zerotwozero3”\n…","fields":{"slug":"/algorithm/programmers_73/"},"frontmatter":{"date":"July 16, 2021","title":"[프로그래머스] 숫자 문자열과 영단어 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"프로젝트를 완성해서 제공할 때는 빌드를 거쳐서 배포해야 하는데, 빌드 작업을 진행할 때 JS 파일안에서 불필요한 주석, 공백 들을 제거해서 파일 크기를 최소화하고 문법도 원활하게 실행되도록 코드 트랜스파일 작업이 필요하다. 만약 프로젝트 내에 이미지 같은 정적 파일이 있으면 해당 파일을 위한 경로도 설정된다. 이 부분을 웹팩(Webpack)이 담당하는데,…","fields":{"slug":"/react/react_skills(11)/"},"frontmatter":{"date":"July 08, 2021","title":"리액트 다루는 기술 정리 (11) - 코드 스플리팅","category":"React","draft":false}}},{"node":{"excerpt":"최근 B 시스템에서 내가 운영하고 있는 A 시스템간의 연동이 필요했는데, 페이지 이동 시에 B 시스템은 SSL인증서가 적용된 상태이고, A 시스템은 여러가지 시스템적인 이유로 SSL 적용이 되지않은 상태였다. 그래서 IE나 웨일에서는 문제가 없었지만, 크롬이나 엣지에서는 페이지 이동전에 안전하지 않은 페이지로 이동한다는 경고창을 중간에 거쳐야 하는 문제가…","fields":{"slug":"/Infra/l4_ssl/"},"frontmatter":{"date":"July 07, 2021","title":"L4 로드밸런서가 적용된 시스템에서 SSL 설정 이슈","category":"Infra","draft":false}}},{"node":{"excerpt":"리액트 웹 애플리케이션에서 API 서버와 연동하여 많이 사용하는데, 그때 API 요청에 대한 상태를 잘 관리해야 한다. 요청이 시작되었을 때는 로딩 중인 것을, 요청이 성공하거나 실패하면 로딩이 끝난것을 명시해야 한다. 리덕스를 사용하고 있고 이러한 비동기 작업을 관리한다면 미들웨어를 사용하여 효율적으로 상태 관리 할 수 있다. 18.1 미들웨어란? 리덕…","fields":{"slug":"/react/react_skills(10)/"},"frontmatter":{"date":"July 05, 2021","title":"리액트 다루는 기술 정리 (10) - 미들웨어를 통한 비동기 작업 관리","category":"React","draft":false}}},{"node":{"excerpt":"리액트 앱에서 리덕스를 사용하면 상태 업데이트에 관한 로직을 모듈로 따로 분리하여 컴포넌트 파일과 별개로 관리 할 수 있다. 그렇기 때문에 유지 보수성이 향상된다. 또 여러 컴포넌트에서 동일한 상태를 공유해야 할 때 매우 유용하다고 할 수 있다. 그리고 실제 업데이트가 필요한 컴포넌트만 리렌더링되도록 최적화 할 수도 있다. 17.2 UI 준비 리액트에서 …","fields":{"slug":"/react/react_skills(9)/"},"frontmatter":{"date":"June 28, 2021","title":"리액트 다루는 기술 정리 (9) - 리덕스로 상태 관리","category":"React","draft":false}}},{"node":{"excerpt":"리덕스는 가장 많이 사용하는 상태 라이브러리이다. 리덕스를 사용하면 컴포넌트의 상태 업데이트 관련 로직을 다른 파일로 분리시켜 효율적으로 관리 할 수 있다. 전역 상태를 관리할 때 특히 효과적이다. 이전 장에서 정리한 Context API로도 전역 상태 관리가 가능하다. 하지만 단순 전역 상태 관리 뿐만 아니라 더욱 더 체계적인 관리를 하고 싶다면 프로젝…","fields":{"slug":"/react/react_skills(8)/"},"frontmatter":{"date":"June 26, 2021","title":"리액트 다루는 기술 정리 (8) - 리덕스 라이브러리 이해","category":"React","draft":false}}},{"node":{"excerpt":"리액트에서 전역적으로 사용할 데이터가 있을 때 유용하게 쓰이는 기능이다. 사용자의 로그인 정보나 환경 설정, 테마 등에 많이 쓰인다. 리덕스나 리액트 라우터, styled-component등의 라이브러리도 Context API 기반으로 구현되어 있다. 15.1 Context API를 사용한 전역 상태 관리 흐름 이해 App 컴포넌트에서 state를 관리하…","fields":{"slug":"/react/react_skills(7)/"},"frontmatter":{"date":"June 25, 2021","title":"리액트 다루는 기술 정리 (7) - Context API","category":"React","draft":false}}},{"node":{"excerpt":"13.1 SPA란? Single Page Application의 약자로 한 개의 페이지로 이뤄진 어플리케이션을 의미한다. 전통적인 웹페이지는 여러 페이지로 구성되어 있고, 다른 페이지로 이동할 때마다 해당 페이지의 html을 서버에서 새로 받아오고, 해당 페이지에 해당하는 리소스들을 받아서 화면에 보여주었다. 하지만 요즘은 웹에 보여줄 화면이 너무 많익 …","fields":{"slug":"/react/react_skills(6)/"},"frontmatter":{"date":"June 22, 2021","title":"리액트 다루는 기술 정리 (6) - SPA와 리액트 라우터","category":"React","draft":false}}},{"node":{"excerpt":"onSubmit 이벤트는 브라우저를 새로고침 시킨다. →  함수를 호출하면서 새로 고침을 방지 할 수 있다. onSubmit 이벤트의 경우 인풋에서  키를 입력했을 때도 발생한다. 하지만 버튼에 onClick 이벤트의 경우에는 따로 엔터키를 감지하여 처리하는 로직을 작성해야 한다. 11. 컴포넌트 성능 최적화 11.1 많은 데이터 렌더링하기 useStat…","fields":{"slug":"/react/react_skills(5)/"},"frontmatter":{"date":"June 15, 2021","title":"리액트 다루는 기술 정리 (5) - 컴포넌트 성능 최적화","category":"React","draft":false}}},{"node":{"excerpt":"9.1 CSS 컴포넌트 스타일링의 가장 기본적인 방식이다. CSS 작성시 가장 중요한 것은 클래스를 중복되지 않도록 만드는 것이다. 클래스가 중복되지 않게하기 위해서 이름을 지을 때 특별한 규칙을 사용하거나 CSS Selector를 사용하는 방법이 있다. 9.1.1 이름 규칙 클래스 이름에 컴포넌트 이름을 포함시켜서  와 같이 클래스를 만들수 있고, BE…","fields":{"slug":"/react/react_skills(4)/"},"frontmatter":{"date":"June 10, 2021","title":"리액트 다루는 기술 정리 (4) - 컴포넌트 스타일링","category":"React","draft":false}}},{"node":{"excerpt":"8.1 useState 가장 기본 적인 Hook으로 함수형 컴포넌트에서도 상태를 사용할 수 있게 해준다. useState 함수는 하나의 상태 값만 관리 할 수 있기 때문에 여러 상태를 관리하기 위해서는 useState를 여러 번 사용해야 한다. 8.2 useEffect useEffect는 리액트 컴포넌트가 렌더링 될 때마다 특정 작업을 수행하도록 설정하도…","fields":{"slug":"/react/react_skills(3)/"},"frontmatter":{"date":"June 09, 2021","title":"리액트 다루는 기술 정리 (3) - Hooks","category":"React","draft":false}}},{"node":{"excerpt":"모든 리액트 컴포넌트에는 라이프사이클이 존재한다. 컴포넌트의 라이프 사이클은 페이지 렌더링 되기 전부터 페리지에서 사라질 때 끝난다. 컴포넌트 라이프사이클은 컴포넌트를 처음으로 렌더링할 때 어떤 작업을 해야하거나, 컴포넌트 업데이트 전후로 어떤 작업을 해야할 때 사용한다. 라이프사이클 메서드는 클래스형 컴포넌트에서만 사용이 가능하다. 함수형 컴포넌트에서는…","fields":{"slug":"/react/react_skills(2)/"},"frontmatter":{"date":"June 08, 2021","title":"리액트 다루는 기술 정리 (2) - 라이프사이클 메서드","category":"React","draft":false}}},{"node":{"excerpt":"1.1 왜 리액트인가 슬랙, 아톰, vs code등도 일렉트론으로 만들었다. 일렉트론은 자바스크립트로 데스크톱 애플리케이션 만드는 프레임워크 자바스크립트의 활용도가 높아지며, 프론트엔드에서도 더 큰 프로젝트를 효과적으로 관리할 수 있도록 프레임워크가 등장하기 시작했다. ex) angular, vue.js, react.js 등 이러한 프레임워크는 주로 MV…","fields":{"slug":"/react/react_skills(1)/"},"frontmatter":{"date":"June 06, 2021","title":"리액트 다루는 기술 정리 (1)","category":"React","draft":false}}},{"node":{"excerpt":"Description Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle and the …","fields":{"slug":"/algorithm/reetcode_30/"},"frontmatter":{"date":"June 03, 2021","title":"[LeetCode] Design Circular Queue - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"자바스크립트를 사용하는 사람들이 대부분 알고 있듯이 자바스크립트는 싱글 쓰레드언어이다. 그렇기 때문에 HTML 페이지에서 스크립트를 실행할 때, 스크립트를 실행하는 동안 스크립트가 완료될 때 까지 응답하지 않는다. 이것을 해결하기 위한 것이 웹 워커(Web Worker)이다. 웹 워커를 사용하면 로드하고 있는 페이지에 영향을 주지 않으면서 독립적으로 스크…","fields":{"slug":"/javascript/web_worker/"},"frontmatter":{"date":"June 02, 2021","title":"웹 워커(Web Worker) : 자바스크립트를 멀티쓰레드로 사용하는 방법","category":"Javascript","draft":false}}},{"node":{"excerpt":"Description Implement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (push, peek, pop, and empty). Implement the MyQ…","fields":{"slug":"/algorithm/reetcode_29/"},"frontmatter":{"date":"May 29, 2021","title":"[LeetCode] Implement Queue using Stacks - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Implement a last in first out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal queue (push, top, pop, and empty). Implement the MySta…","fields":{"slug":"/algorithm/reetcode_28/"},"frontmatter":{"date":"May 27, 2021","title":"[LeetCode] Implement Stack using Queues - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"action main 최근 주변 친구들을 통해 github action이라는 것이 되게 유용하고 요즘 많이 활용된다는 이야기를 들었었다. 그래서 단순히 아~ 그렇구나 하고 넘어갔었지만, 인프런에서 관련 강의를 우연히 보게되면서 한번 써보고 맛보자(?)라는 마음으로 해보게되었다. 그리고 이 기회에 포스팅으로 정리해보려고 한다. Github Action이란?…","fields":{"slug":"/github/github action/"},"frontmatter":{"date":"May 25, 2021","title":"Github Action(깃헙 액션) 써보기","category":"Git","draft":false}}},{"node":{"excerpt":"쿠키 쿠키 쿠키는 위의 그림과 같은 흐름으로 이용된다. 쿠키를 사용하는 이유는 HTTP 요청은 상태를 가지고 있지 않기 때문이다.(Stateless) 이 말은 브라우저에서는 서버에 요청을 보낼 때 그 요청 자체로는 그 요청이 누구에게서 오는지 알 수 없고, 쿠키에 정보를 담아서 보내면 서버는 쿠키를 통해 파악할 수 있게된다. 이전에는 쇼핑몰에서 로그인을 …","fields":{"slug":"/web/storage_session_cookie/"},"frontmatter":{"date":"May 20, 2021","title":"웹 스토리지 vs 쿠키 vs 세션","category":"Web","draft":false}}},{"node":{"excerpt":"Description Given a list of daily temperatures temperatures, return a list such that, for each day in the input, tells you how many days you would have to wait until a warmer temperature. If there is…","fields":{"slug":"/algorithm/reetcode_27/"},"frontmatter":{"date":"May 18, 2021","title":"[LeetCode] Daily Temperatures - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"렌더 트리 구축 DOM 트리가 구축되는 동안에 브라우저는 렌더 트리를 구축한다. 구성요소를 올바른 순서대로 내용을 그려내기 위함이다. 이 구성 요소를 렌더러(renderer) 또는 렌더 객체(render object), 형상(frames)라고 부른다. DOM 트리와 렌더 트리의 관계 렌더러는 DOM 요소에 부합하긴 하지만 일대일 대응 관계는 아니다. 와 …","fields":{"slug":"/web/browser_working2/"},"frontmatter":{"date":"May 17, 2021","title":"브라우저의 동작 방식(2)","category":"Web","draft":false}}},{"node":{"excerpt":"Description Given a string s, remove duplicate letters so that every letter appears once and only once. You must make sure your result is the smallest in lexicographical order among all possible resu…","fields":{"slug":"/algorithm/reetcode_26/"},"frontmatter":{"date":"May 16, 2021","title":"[LeetCode] Remove Duplicate Letters - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given a string s containing just the characters ’(’, ’)’, ’{’, ’}’, ’’ and ’’, determine if the input string is valid. An input string is valid if: Open brackets must be closed by the sam…","fields":{"slug":"/algorithm/reetcode_25/"},"frontmatter":{"date":"May 14, 2021","title":"[LeetCode] Valid Parentheses - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed lis…","fields":{"slug":"/algorithm/reetcode_24/"},"frontmatter":{"date":"May 13, 2021","title":"[LeetCode] Reverse Linked List II - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"이 글은 네이버 D2의 ‘브라우저는 어떻게 동작하는가?’ 글을 보며 정리한 내용을 포스팅한 것이다. 기본적으로 프론트엔드 웹 개발을 한다고 하면, 브라우저는 기본 중에 기본이라고 할 수 있는데, 이러한 브라우저의 동작 방식에 대해서 확실히 정리하고 알 필요가 있을 것 같아서 정리하게 되었다. 여기서 말하는 브라우저는 다들 사용하고 있는 크롬, 파이어폭스,…","fields":{"slug":"/web/browser_working1/"},"frontmatter":{"date":"May 12, 2021","title":"브라우저의 동작 방식(1)","category":"Web","draft":false}}},{"node":{"excerpt":"Description Given the head of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return the reordered list. The first node is considered …","fields":{"slug":"/algorithm/reetcode_23/"},"frontmatter":{"date":"May 12, 2021","title":"[LeetCode] Odd Even Linked List - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"웹 프론트엔트를 학습하다보면 Repaint와 Reflow라는 개념을 자주 접하게 된다. 그냥 단어를 보면 막연하게 뭔가 다시 그리고, 다시 흐르게 하는? 그런 어감인데 이것이 무엇이고, 프론트엔드 개념에서 왜 자주 등장하는지에 대해 알아보자. Reflow 리플로우(reflow)는 생성된 DOM 노드의 레이아웃 수치(위치, 높이, 너비 등)가 변경되었을 때…","fields":{"slug":"/web/repaint_reflow/"},"frontmatter":{"date":"May 11, 2021","title":"Repaint, Reflow란?","category":"Web","draft":false}}},{"node":{"excerpt":"Description Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list’s nodes (i.e., only nodes themselves may be cha…","fields":{"slug":"/algorithm/reetcode_22/"},"frontmatter":{"date":"May 09, 2021","title":"[LeetCode] Swap Nodes in Pairs - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbe…","fields":{"slug":"/algorithm/reetcode_21/"},"frontmatter":{"date":"May 08, 2021","title":"[LeetCode] Add Two Numbers - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"우리는 평소에 웹 브라우저에 URL을 입력하여 접속하는데, 이때 무슨 일이 벌어지는지 나는 정확히 알고 있을지 궁금하여 이 포스트를 통해 확인하고자 한다. 내가 알고있는 과정을 간단히 말해보면 주소창에 www.naver.com를 친다면 해당 도메인의 정확한 IP주소를 알아야 접근할 수 있기 때문에 해당 도메인에 대한 IP 주소를 DNS 서버에 요청할 것이…","fields":{"slug":"/web/when_type_url/"},"frontmatter":{"date":"May 06, 2021","title":"브라우저에 URL을 입력하면 발생하는 일","category":"Web","draft":false}}},{"node":{"excerpt":"Description Given the head of a singly linked list, reverse the list, and return the reversed list. Example 1: 그림1\nInput: head = 1,2,3,4,5\nOutput: 5,4,3,2,1 Example 2: 그림2\nInput: head = 1,2\nOutput: 2…","fields":{"slug":"/algorithm/reetcode_20/"},"frontmatter":{"date":"May 05, 2021","title":"[LeetCode] Reverse Linked List - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists. Example 1: Input: l1 = 1,2,4, l2 = 1,3,4\nOutpu…","fields":{"slug":"/algorithm/reetcode_19/"},"frontmatter":{"date":"May 04, 2021","title":"[LeetCode] Merge Two Sorted Lists - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given the head of a singly linked list, return true if it is a palindrome. Example 1: Input: head = 1,2,2,1\nOutput: true Example 2: Input: head = 1,2\nOutput: false Constraints: The number…","fields":{"slug":"/algorithm/reetcode_18/"},"frontmatter":{"date":"May 03, 2021","title":"[LeetCode] Palindrome Linked List - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description You are given an array prices where pricesi is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a differe…","fields":{"slug":"/algorithm/reetcode_17/"},"frontmatter":{"date":"May 02, 2021","title":"[LeetCode] Best Time to Buy and Sell Stock - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given an integer array nums, return an array answer such that answeri is equal to the product of all the elements of nums except numsi. The product of any prefix or suffix of nums is guar…","fields":{"slug":"/algorithm/reetcode_16/"},"frontmatter":{"date":"May 01, 2021","title":"[LeetCode] Product of Array Except Self - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given an integer array nums of 2n integers, group these integers into n pairs (a1, b1), (a2, b2), …, (an, bn) such that the sum of min(ai, bi) for all i is maximized. Return the maximized…","fields":{"slug":"/algorithm/reetcode_15/"},"frontmatter":{"date":"April 30, 2021","title":"[LeetCode] Array Partition I - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given an integer array nums, return all the triplets [numsi, numsj, numsk] such that i != j, i != k, and j != k, and numsi + numsj + numsk == 0. Notice that the solution set must not cont…","fields":{"slug":"/algorithm/reetcode_14/"},"frontmatter":{"date":"April 29, 2021","title":"[LeetCode] 3Sum - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, a…","fields":{"slug":"/algorithm/reetcode_13/"},"frontmatter":{"date":"April 27, 2021","title":"[LeetCode] Two Sum - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is, F(…","fields":{"slug":"/algorithm/reetcode_12/"},"frontmatter":{"date":"April 26, 2021","title":"[LeetCode] Fibonacci Number - DFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 각 점에 가중치가 부여된 트리가 주어집니다. 당신은 다음 연산을 통하여, 이 트리의 모든 점들의 가중치를 0으로 만들고자 합니다. 임의의 연결된 두 점을 골라서 한쪽은 1 증가시키고, 다른 한쪽은 1 감소시킵니다.\n하지만, 모든 트리가 위의 행동을 통하여 모든 점들의 가중치를 0으로 만들 수 있는 것은 아닙니다. 당신은 주어진 트리에 대해서 해…","fields":{"slug":"/algorithm/programmers_72/"},"frontmatter":{"date":"April 25, 2021","title":"[프로그래머스] 모두 0으로 만들기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 오지 탐험가인 프로도는 탐험 도중 n개의 방으로 이루어진 지하 동굴을 탐험하게 되었습니다. 모든 방에는 0부터 n - 1 까지 번호가 붙어있고, 이 동굴에 들어갈 수 있는 유일한 입구는 0번 방과 연결되어 있습니다. 각 방들은 양방향으로 통행이 가능한 통로로 서로 연결되어 있는데, 서로 다른 두 방을 직접 연결하는 통로는 오직 하나입니다. 임의…","fields":{"slug":"/algorithm/programmers_71/"},"frontmatter":{"date":"April 24, 2021","title":"[프로그래머스] 동굴 탐험 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 건설회사의 설계사인 죠르디는 고객사로부터 자동차 경주로 건설에 필요한 견적을 의뢰받았습니다.\n제공된 경주로 설계 도면에 따르면 경주로 부지는 N x N 크기의 정사각형 격자 형태이며 각 격자는 1 x 1 크기입니다.\n설계 도면에는 각 격자의 칸은 0 또는 1 로 채워져 있으며, 0은 칸이 비어 있음을 1은 해당 칸이 벽으로 채워져 있음을 나타냅…","fields":{"slug":"/algorithm/programmers_70/"},"frontmatter":{"date":"April 23, 2021","title":"[프로그래머스] 경주로 건설 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 본 문제는 정확성과 효율성 테스트 각각 점수가 있는 문제입니다. 개발자 출신으로 세계 최고의 갑부가 된 어피치는 스트레스를 받을 때면 이를 풀기 위해 오프라인 매장에 쇼핑을 하러 가곤 합니다.\n어피치는 쇼핑을 할 때면 매장 진열대의 특정 범위의 물건들을 모두 싹쓸이 구매하는 습관이 있습니다.\n어느 날 스트레스를 풀기 위해 보석 매장에 쇼핑을 하…","fields":{"slug":"/algorithm/programmers_69/"},"frontmatter":{"date":"April 22, 2021","title":"[프로그래머스] 보석쇼핑 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 IT 벤처 회사를 운영하고 있는 라이언은 매년 사내 해커톤 대회를 개최하여 우승자에게 상금을 지급하고 있습니다.\n이번 대회에서는 우승자에게 지급되는 상금을 이전 대회와는 다르게 다음과 같은 방식으로 결정하려고 합니다.\n해커톤 대회에 참가하는 모든 참가자들에게는 숫자들과 3가지의 연산문자(+, -, ) 만으로 이루어진 연산 수식이 전달되며, 참가…","fields":{"slug":"/algorithm/programmers_68/"},"frontmatter":{"date":"April 21, 2021","title":"[프로그래머스] 수식 최대화 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 다음 규칙을 지키는 문자열을 올바른 괄호 문자열이라고 정의합니다. (), [], {} 는 모두 올바른 괄호 문자열입니다.\n만약 A가 올바른 괄호 문자열이라면, (A), A, {A} 도 올바른 괄호 문자열입니다. 예를 들어, [] 가 올바른 괄호 문자열이므로, ([]) 도 올바른 괄호 문자열입니다.\n만약 A, B가 올바른 괄호 문자열이라면, AB…","fields":{"slug":"/algorithm/programmers_67/"},"frontmatter":{"date":"April 20, 2021","title":"[프로그래머스] 괄호 회전하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 어떤 정수들이 있습니다. 이 정수들의 절댓값을 차례대로 담은 정수 배열 absolutes와 이 정수들의 부호를 차례대로 담은 불리언 배열 signs가 매개변수로 주어집니다. 실제 정수들의 합을 구하여 return 하도록 solution 함수를 완성해주세요. 제한사항 absolutes의 길이는 1 이상 1,000 이하입니다.\nabsolutes의 …","fields":{"slug":"/algorithm/programmers_66/"},"frontmatter":{"date":"April 19, 2021","title":"[프로그래머스] 음양더하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 지훈이는 미로에서 일을 한다. 지훈이를 미로에서 탈출하도록 도와주자! 미로에서의 지훈이의 위치와 불이 붙은 위치를 감안해서 지훈이가 불에 타기전에 탈출할 수 있는지의 여부, 그리고 얼마나 빨리 탈출할 수 있는지를 결정해야한다. 지훈이와 불은 매 분마다 한칸씩 수평또는 수직으로(비스듬하게 이동하지 않는다) 이동한다. 불은 각 지점에서 네 방향으로 확산…","fields":{"slug":"/algorithm/boj_40/"},"frontmatter":{"date":"April 18, 2021","title":"[BOJ] 불! - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 철수의 토마토 농장에서는 토마토를 보관하는 큰 창고를 가지고 있다. 토마토는 아래의 그림과 같이 격자모양 상자의 칸에 하나씩 넣은 다음, 상자들을 수직으로 쌓아 올려서 창고에 보관한다. 그림 창고에 보관되는 토마토들 중에는 잘 익은 것도 있지만, 아직 익지 않은 토마토들도 있을 수 있다. 보관 후 하루가 지나면, 익은 토마토들의 인접한 곳에 있는 익…","fields":{"slug":"/algorithm/boj_39/"},"frontmatter":{"date":"April 17, 2021","title":"[BOJ] 토마토2 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 재난방재청에서는 많은 비가 내리는 장마철에 대비해서 다음과 같은 일을 계획하고 있다. 먼저 어떤 지역의 높이 정보를 파악한다. 그 다음에 그 지역에 많은 비가 내렸을 때 물에 잠기지 않는 안전한 영역이 최대로 몇 개가 만들어 지는 지를 조사하려고 한다. 이때, 문제를 간단하게 하기 위하여, 장마철에 내리는 비의 양에 따라 일정한 높이 이하의 모든 지…","fields":{"slug":"/algorithm/boj_38/"},"frontmatter":{"date":"April 16, 2021","title":"[BOJ] 안전영역 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 <그림 1>과 같이 정사각형 모양의 지도가 있다. 1은 집이 있는 곳을, 0은 집이 없는 곳을 나타낸다. 철수는 이 지도를 가지고 연결된 집의 모임인 단지를 정의하고, 단지에 번호를 붙이려 한다. 여기서 연결되었다는 것은 어떤 집이 좌우, 혹은 아래위로 다른 집이 있는 경우를 말한다. 대각선상에 집이 있는 경우는 연결된 것이 아니다. <그림 2>는 …","fields":{"slug":"/algorithm/boj_37/"},"frontmatter":{"date":"April 15, 2021","title":"[BOJ] 단지번호붙이기 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 카카오에 신입 개발자로 입사한 “콘”은 선배 개발자로부터 개발역량 강화를 위해 다른 개발자가 작성한 소스 코드를 분석하여 문제점을 발견하고 수정하라는 업무 과제를 받았습니다. 소스를 컴파일하여 로그를 보니 대부분 소스 코드 내 작성된 괄호가 개수는 맞지만 짝이 맞지 않은 형태로 작성되어 오류가 나는 것을 알게 되었습니다.\n수정해야 할 소스 파일…","fields":{"slug":"/algorithm/programmers_65/"},"frontmatter":{"date":"April 15, 2021","title":"[프로그래머스] 괄호변환 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 데이터 처리 전문가가 되고 싶은 “어피치”는 문자열을 압축하는 방법에 대해 공부를 하고 있습니다. 최근에 대량의 데이터 처리를 위한 간단한 비손실 압축 방법에 대해 공부를 하고 있는데, 문자열에서 같은 값이 연속해서 나타나는 것을 그 문자의 개수와 반복되는 값으로 표현하여 더 짧은 문자열로 줄여서 표현하는 알고리즘을 공부하고 있습니다.\n간단한 …","fields":{"slug":"/algorithm/programmers_64/"},"frontmatter":{"date":"April 15, 2021","title":"[프로그래머스] 문자열 압축 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 눈금의 간격이 1인 M×N(M,N≤100)크기의 모눈종이가 있다. 이 모눈종이 위에 눈금에 맞추어 K개의 직사각형을 그릴 때, 이들 K개의 직사각형의 내부를 제외한 나머지 부분이 몇 개의 분리된 영역으로 나누어진다. 예를 들어 M=5, N=7 인 모눈종이 위에 <그림 1>과 같이 직사각형 3개를 그렸다면, 그 나머지 영역은 <그림 2>와 같이 3개의…","fields":{"slug":"/algorithm/boj_36/"},"frontmatter":{"date":"April 14, 2021","title":"[BOJ] 영역구하기 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 차세대 영농인 한나는 강원도 고랭지에서 유기농 배추를 재배하기로 하였다. 농약을 쓰지 않고 배추를 재배하려면 배추를 해충으로부터 보호하는 것이 중요하기 때문에, 한나는 해충 방지에 효과적인 배추흰지렁이를 구입하기로 결심한다. 이 지렁이는 배추근처에 서식하며 해충을 잡아 먹음으로써 배추를 보호한다. 특히, 어떤 배추에 배추흰지렁이가 한 마리라도 살고 …","fields":{"slug":"/algorithm/boj_35/"},"frontmatter":{"date":"April 13, 2021","title":"[BOJ] 유기농배추 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된다. 순간이동을 하는 경우에는 1초 후에 2*X의 위치로 이동하게 된다.…","fields":{"slug":"/algorithm/boj_34/"},"frontmatter":{"date":"April 12, 2021","title":"[BOJ] 숨바꼭질 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 어떤 큰 도화지에 그림이 그려져 있을 때, 그 그림의 개수와, 그 그림 중 넓이가 가장 넓은 것의 넓이를 출력하여라. 단, 그림이라는 것은 1로 연결된 것을 한 그림이라고 정의하자. 가로나 세로로 연결된 것은 연결이 된 것이고 대각선으로 연결이 된 것은 떨어진 그림이다. 그림의 넓이란 그림에 포함된 1의 개수이다. 입력 첫째 줄에 도화지의 세로 크기…","fields":{"slug":"/algorithm/boj_33/"},"frontmatter":{"date":"April 11, 2021","title":"[BOJ] 그림 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 당신은 상범 빌딩에 갇히고 말았다. 여기서 탈출하는 가장 빠른 길은 무엇일까? 상범 빌딩은 각 변의 길이가 1인 정육면체(단위 정육면체)로 이루어져있다. 각 정육면체는 금으로 이루어져 있어 지나갈 수 없거나, 비어있어서 지나갈 수 있게 되어있다. 당신은 각 칸에서 인접한 6개의 칸(동,서,남,북,상,하)으로 1분의 시간을 들여 이동할 수 있다. 즉,…","fields":{"slug":"/algorithm/boj_31/"},"frontmatter":{"date":"April 10, 2021","title":"[BOJ] 상범 빌딩 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given an integer array nums of unique elements, return all possible subsets (the power set). The solution set must not contain duplicate subsets. Return the solution in any order. Example…","fields":{"slug":"/algorithm/reetcode_11/"},"frontmatter":{"date":"April 10, 2021","title":"[LeetCode] Subsets - DFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 철수의 토마토 농장에서는 토마토를 보관하는 큰 창고를 가지고 있다. 토마토는 아래의 그림과 같이 격자 모양 상자의 칸에 하나씩 넣어서 창고에 보관한다. 창고에 보관되는 토마토들 중에는 잘 익은 것도 있지만, 아직 익지 않은 토마토들도 있을 수 있다. 보관 후 하루가 지나면, 익은 토마토들의 인접한 곳에 있는 익지 않은 토마토들은 익은 토마토의 영향을…","fields":{"slug":"/algorithm/boj_32/"},"frontmatter":{"date":"April 09, 2021","title":"[BOJ] 토마토 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return t…","fields":{"slug":"/algorithm/reetcode_10/"},"frontmatter":{"date":"April 09, 2021","title":"[LeetCode] Combination Sum - DFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 적록색약은 빨간색과 초록색의 차이를 거의 느끼지 못한다. 따라서, 적록색약인 사람이 보는 그림은 아닌 사람이 보는 그림과는 좀 다를 수 있다. 크기가 N×N인 그리드의 각 칸에 R(빨강), G(초록), B(파랑) 중 하나를 색칠한 그림이 있다. 그림은 몇 개의 구역으로 나뉘어져 있는데, 구역은 같은 색으로 이루어져 있다. 또, 같은 색상이 상하좌우로…","fields":{"slug":"/algorithm/boj_30/"},"frontmatter":{"date":"April 08, 2021","title":"[BOJ] 적록색약 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given two integers n and k, return all possible combinations of k numbers out of the range 1, n. You may return the answer in any order. Example 1: Input: n = 4, k = 2\nOutput:\n[\n2,4,\n3,4,…","fields":{"slug":"/algorithm/reetcode_9/"},"frontmatter":{"date":"April 08, 2021","title":"[LeetCode] Combinations - DFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 케빈 베이컨의 6단계 법칙에 의하면 지구에 있는 모든 사람들은 최대 6단계 이내에서 서로 아는 사람으로 연결될 수 있다. 케빈 베이컨 게임은 임의의 두 사람이 최소 몇 단계 만에 이어질 수 있는지 계산하는 게임이다. 예를 들면, 전혀 상관없을 것 같은 인하대학교의 이강호와 서강대학교의 민세희는 몇 단계만에 이어질 수 있을까? 천민호는 이강호와 같은 …","fields":{"slug":"/algorithm/boj_29/"},"frontmatter":{"date":"April 07, 2021","title":"[BOJ] 케빈 베이컨의 6단계 법칙 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order. Example 1: Input: nums = 1,2,3\nOutput: [1,2,3,1,3,2,2,1,3,2,3,1,3,1…","fields":{"slug":"/algorithm/reetcode_8/"},"frontmatter":{"date":"April 07, 2021","title":"[LeetCode] Permutations - DFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order. A mapping of digit to letters…","fields":{"slug":"/algorithm/reetcode_7/"},"frontmatter":{"date":"April 06, 2021","title":"[LeetCode] Letter Combinations of a Phone Number - DFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 N×M크기의 배열로 표현되는 미로가 있다. 미로에서 1은 이동할 수 있는 칸을 나타내고, 0은 이동할 수 없는 칸을 나타낸다. 이러한 미로가 주어졌을 때, (1, 1)에서 출발하여 (N, M)의 위치로 이동할 때 지나야 하는 최소의 칸 수를 구하는 프로그램을 작성하시오. 한 칸에서 다른 칸으로 이동할 때, 서로 인접한 칸으로만 이동할 수 있다. 위의…","fields":{"slug":"/algorithm/boj_27/"},"frontmatter":{"date":"April 05, 2021","title":"[BOJ] 미로 탐색 - BFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given an m x n 2D binary grid grid which represents a map of ‘1’s (land) and ‘0’s (water), return the number of islands. An island is surrounded by water and is formed by connecting adjac…","fields":{"slug":"/algorithm/reetcode_6/"},"frontmatter":{"date":"April 05, 2021","title":"[LeetCode] Number of Islands - DFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given an array of strings strs, group the anagrams together. You can return the answer in any order. An Anagram is a word or phrase formed by rearranging the letters of a different word o…","fields":{"slug":"/algorithm/reetcode_5/"},"frontmatter":{"date":"April 04, 2021","title":"[LeetCode] Group Anagrams - 문자열 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given a string paragraph and a string array of the banned words banned, return the most frequent word that is not banned. It is guaranteed there is at least one word that is not banned, a…","fields":{"slug":"/algorithm/reetcode_4/"},"frontmatter":{"date":"April 03, 2021","title":"[LeetCode] Most Common Word - 문자열 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 정사각형으로 이루어져 있는 섬과 바다 지도가 주어진다. 섬의 개수를 세는 프로그램을 작성하시오. 사진1 한 정사각형과 가로, 세로 또는 대각선으로 연결되어 있는 사각형은 걸어갈 수 있는 사각형이다. 두 정사각형이 같은 섬에 있으려면, 한 정사각형에서 다른 정사각형으로 걸어서 갈 수 있는 경로가 있어야 한다. 지도는 바다로 둘러싸여 있으며, 지도 밖으…","fields":{"slug":"/algorithm/boj_26/"},"frontmatter":{"date":"April 02, 2021","title":"[BOJ] 섬의 개수 - BFS, DFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 1부터 N까지 정수 N개로 이루어진 순열을 나타내는 방법은 여러 가지가 있다. 예를 들어, 8개의 수로 이루어진 순열 (3, 2, 7, 8, 1, 4, 5, 6)을 배열을 이용해 표현하면 와 같다. 또는, Figure 1과 같이 방향 그래프로 나타낼 수도 있다. 순열을 배열을 이용해 로 나타냈다면, i에서 πi로 간선을 이어 그래프로 만들 수 있다.…","fields":{"slug":"/algorithm/boj_28/"},"frontmatter":{"date":"April 02, 2021","title":"[BOJ] 순열 사이클 - BFS, DFS - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description You are given an array of logs. Each log is a space-delimited string of words, where the first word is the identifier. There are two types of logs: Letter-logs: All words (except the iden…","fields":{"slug":"/algorithm/reetcode_3/"},"frontmatter":{"date":"April 02, 2021","title":"[LeetCode] Reorder Data in Log Files - 문자열 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다. 문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요. 제한 조건 s는 길이 1 이상인 문자열입니다.\ns는 알파벳과 공백문자(” “)로 이루어져 있습니다.\n첫 문자가 영문이 아닐때에는 이어지…","fields":{"slug":"/algorithm/programmers_63/"},"frontmatter":{"date":"April 01, 2021","title":"[프로그래머스] JadenCase 문자열 만들기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Given a string s, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Example 1: Input: s = “A man, a plan, a canal: Panama”\nOutput: true\nExplana…","fields":{"slug":"/algorithm/reetcode_1/"},"frontmatter":{"date":"April 01, 2021","title":"[LeetCode] Valid Palindrome - 문자열 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Description Write a function that reverses a string. The input string is given as an array of characters s. Example 1: Input: s = “h”,“e”,“l”,“l”,“o”\nOutput: “o”,“l”,“l”,“e”,“h” Example 2: Input: s =…","fields":{"slug":"/algorithm/reetcode_2/"},"frontmatter":{"date":"April 01, 2021","title":"[LeetCode] Reverse String - 문자열 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"TypeScript, Flow 등 JS 정적 타이핑 툴 경험 웹 프론트엔드 채용 공고들을 보면 종종 위와 같이 타입스크립트에 대한 경험을 필요로 하는 경우가 존재한다. 그래서 한번 타입스크립트의 특징과 필요성에 대한 정리가 필요한 것 같아 이번 포스트를 쓰게 되었다. 사실 놀랍게도 나는 타입스크립트를 써본적이 있다. 물론 알고쓴게 아니고, 자바스크립트도 …","fields":{"slug":"/web/why_typescript/"},"frontmatter":{"date":"March 29, 2021","title":"왜 타입스크립트를 쓸까?","category":"Web","draft":false}}},{"node":{"excerpt":"문제 설명 H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과1에 따르면, H-Index는 다음과 같이 구합니다. 어떤 과학자가 발표한 논문 n편 중, h번 이상 인용된 논문이 h편 이상이고 나머지 논문이 h번 이하 인용되었다면 h의 최댓값이 이 과학자의 H-Inde…","fields":{"slug":"/algorithm/programmers_62/"},"frontmatter":{"date":"March 29, 2021","title":"[프로그래머스] H-index - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 문자열 s에는 공백으로 구분된 숫자들이 저장되어 있습니다. str에 나타나는 숫자 중 최소값과 최대값을 찾아 이를 “(최소값) (최대값)“형태의 문자열을 반환하는 함수, solution을 완성하세요.\n예를들어 s가 “1 2 3 4”라면 “1 4”를 리턴하고, “-1 -2 -3 -4”라면 “-4 -1”을 리턴하면 됩니다. 제한 조건 s에는 둘 이…","fields":{"slug":"/algorithm/programmers_60/"},"frontmatter":{"date":"March 25, 2021","title":"[프로그래머스] 최댓값과 최솟값 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 길이가 같은 배열 A, B 두개가 있습니다. 각 배열은 자연수로 이루어져 있습니다.\n배열 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱합니다. 이러한 과정을 배열의 길이만큼 반복하며, 두 수를 곱한 값을 누적하여 더합니다. 이때 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다. (단, 각 배열에서 k번째 숫자를 뽑았다면 다음에…","fields":{"slug":"/algorithm/programmers_59/"},"frontmatter":{"date":"March 24, 2021","title":"[프로그래머스] 최솟값 만들기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 노란색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다. 문제사진 Leo는 집으로 돌아와서 아까 본 카펫의 노란색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카펫의 크기는 기억하지 못했습니다. Leo가 본 카펫에서 갈색 격자의 수 brown, 노란색 격…","fields":{"slug":"/algorithm/programmers_61/"},"frontmatter":{"date":"March 24, 2021","title":"[프로그래머스] 카펫 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"이번에 공부하고 있는 프로젝트에서 API를 통해 검색한 데이터를 나타내는 부분을 구현하다가, 검색어를 입력할 때마다 네트워크 요청이 드는 문제가 발생하였다. 이 부분은 매우 비효율적인 부분이라는 생각이 들었다. 예시를 보자면 아래 움짤 검색기에서 ‘피자’를 검색하려고 하는데, 네트워크 요청(fetch)가 4번이나 발생한다. 내가 결국 검색하고자 하는 키워…","fields":{"slug":"/web/debouncing_vs_throttling/"},"frontmatter":{"date":"March 23, 2021","title":"디바운싱(Debouncing) vs 쓰로틀링(Throttling)","category":"Web","draft":false}}},{"node":{"excerpt":"문제 설명 Finn은 요즘 수학공부에 빠져 있습니다. 수학 공부를 하던 Finn은 자연수 n을 연속한 자연수들로 표현 하는 방법이 여러개라는 사실을 알게 되었습니다. 예를들어 15는 다음과 같이 4가지로 표현 할 수 있습니다. 1 + 2 + 3 + 4 + 5 = 15\n4 + 5 + 6 = 15\n7 + 8 = 15\n15 = 15\n자연수 n이 매개변수로 주어…","fields":{"slug":"/algorithm/programmers_58/"},"frontmatter":{"date":"March 19, 2021","title":"[프로그래머스] 숫자의 표현 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다. 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운 음식을 만듭니다. 섞은 음식의 스코빌 지수 = 가장 맵지 않은 음식의 스코빌 지수 + (두 번째로 맵지 않은 음식의 …","fields":{"slug":"/algorithm/programmers_57/"},"frontmatter":{"date":"March 18, 2021","title":"[프로그래머스] 더 맵게 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다. 예를들어 F(2) = F(0) + F(1) = 0 + 1 = 1\nF(3) = F(1) + F(2) = 1 + 1 = 2\nF(4) = F(2) + F(3) = 1 + 2 = 3\nF(5) = F(3) + …","fields":{"slug":"/algorithm/programmers_56/"},"frontmatter":{"date":"March 17, 2021","title":"[프로그래머스] 피보나치 수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 주어진 숫자 중 3개의 수를 더했을 때 소수가 되는 경우의 개수를 구하려고 합니다. 숫자들이 들어있는 배열 nums가 매개변수로 주어질 때, nums에 있는 숫자들 중 서로 다른 3개를 골라 더했을 때 소수가 되는 경우의 개수를 return 하도록 solution 함수를 완성해주세요. 제한사항 nums에 들어있는 숫자의 개수는 3개 이상 50개…","fields":{"slug":"/algorithm/programmers_55/"},"frontmatter":{"date":"March 16, 2021","title":"[프로그래머스] 소수 만들기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다.\n홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 예를 들어 연구실에 총 4마리…","fields":{"slug":"/algorithm/programmers_54/"},"frontmatter":{"date":"March 15, 2021","title":"[프로그래머스] 폰켓몬 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 카카오에 입사한 신입 개발자 네오는 “카카오계정개발팀”에 배치되어, 카카오 서비스에 가입하는 유저들의 아이디를 생성하는 업무를 담당하게 되었습니다. “네오”에게 주어진 첫 업무는 새로 가입하는 유저들이 카카오 아이디 규칙에 맞지 않는 아이디를 입력했을 때, 입력된 아이디와 유사하면서 규칙에 맞는 아이디를 추천해주는 프로그램을 개발하는 것입니다.…","fields":{"slug":"/algorithm/programmers_53/"},"frontmatter":{"date":"March 14, 2021","title":"[프로그래머스] 신규 아이디 추천 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"저번 자바스크립트의 동작 원리 - 어쨌든 이벤트 루프는 무엇입니까?에서 작동 순서를 정리하며, 비동기 처리에 대해서도 잠시 다루었었다. 동기 함수와 비동기 함수를 헷갈릴 수도 있는데, 간단히 말해서 동기 함수는 호출한 후에 결과 값을 기다려야 하는 함수이고, 비동기 함수는 호출 후에 결과 값을 기다리지 않고 다음 호출을 할 수 있는 함수이다. 자바스크립트…","fields":{"slug":"/javascript/async/"},"frontmatter":{"date":"March 12, 2021","title":"자바스크립트의 비동기 처리 - callback, promise, async ~ await","category":"Javascript","draft":false}}},{"node":{"excerpt":"문제 도현이의 집 N개가 수직선 위에 있다. 각각의 집의 좌표는 x1, …, xN이고, 집 여러개가 같은 좌표를 가지는 일은 없다. 도현이는 언제 어디서나 와이파이를 즐기기 위해서 집에 공유기 C개를 설치하려고 한다. 최대한 많은 곳에서 와이파이를 사용하려고 하기 때문에, 한 집에는 공유기를 하나만 설치할 수 있고, 가장 인접한 두 공유기 사이의 거리를 …","fields":{"slug":"/algorithm/boj_24/"},"frontmatter":{"date":"March 11, 2021","title":"[BOJ] 공유기 설치 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"자바스크립트의 이벤트 루프와 동기, 비동기 등의 개념을 알기 위해 이 영상을 보게 되었다. 나는 자바스크립트가 싱글스레드 기반이고, 콜백 큐를 사용한다고는 알고있지만 그것에 대해 자세히 알고 있지는 못하다. '어쨌든 이벤트 루프는 무엇입니까? image' 이 영상에서 스피커는 자바스크립트가 실제로 어떻게 동작하는지 알고 싶어서 공부하고 정리했고, 다른 언…","fields":{"slug":"/javascript/what_is_event_loop/"},"frontmatter":{"date":"March 08, 2021","title":"자바스크립트의 동작 원리 - 어쨌든 이벤트 루프는 무엇입니까?","category":"Javascript","draft":false}}},{"node":{"excerpt":"문제 영식이는 직사각형 모양의 성을 가지고 있다. 성의 1층은 몇 명의 경비원에 의해서 보호되고 있다. 영식이는 모든 행과 모든 열에 한 명 이상의 경비원이 있으면 좋겠다고 생각했다. 성의 크기와 경비원이 어디있는지 주어졌을 때, 몇 명의 경비원을 최소로 추가해야 영식이를 만족시키는지 구하는 프로그램을 작성하시오. 입력 첫째 줄에 성의 세로 크기 N과 가…","fields":{"slug":"/algorithm/boj_23/"},"frontmatter":{"date":"March 07, 2021","title":"[BOJ] 성 지키기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"context를 이용하면 단계마다 일일이 props를 넘겨주지 않고도 컴포넌트 트리 전체에 데이터를 제공할 수 있다. 일반적으로 데이터를 넘겨주기 위해서는 props를 통해서 상위 컴포넌트에서 하위 컴포넌트로 데이터를 내리지만 그런 경우에 여러 컴포넌트에 전달되어야 하는 경우 연쇄적으로 props를 전달해야 하기 때문에 번거롭다.\nprops drillin…","fields":{"slug":"/react/context_api/"},"frontmatter":{"date":"March 03, 2021","title":"리액트 Context API 활용하기","category":"React","draft":false}}},{"node":{"excerpt":"Hook은 리액트 16.8 버전 이후 추가된 기능이며, Hook이 등장하면서 더 이상 상태를 관리하기 위해 Class를 쓸 필요가 없어졌다. 기존에는 Class형 컴포넌트에서만 상태를 관리 할 수 있었고, 함수형 컴포넌트에서는 상태를 관리할 수 없었지만, Hook을 통해 상태 관리를 할 수 있게 되었고, 상태 관리 뿐만 아니라 기존 클래스형 컴포넌트에서만…","fields":{"slug":"/react/hooks/"},"frontmatter":{"date":"March 01, 2021","title":"리액트 Hook(훅)이란?","category":"React","draft":false}}},{"node":{"excerpt":"웹 개발을 하며 CSS를 사용하여 어느 정도 내가 원하는 대로 배치를 해야하는 상황이 비일비재 한데, CSS의 개념을 정확히 이해하지 못해서 헤멜 떄가 많았다. CSS를 통해 기본적으로 표시하고 배치하는 속성인 display와 position 속성에 대해 알아보자. 박스모델 CSS는 기본적으로 박스들이 여러개 쌓여있는 것 처럼 생각해야 한다.\n박스모델\n박…","fields":{"slug":"/web/css_position_display/"},"frontmatter":{"date":"February 26, 2021","title":"CSS Position & Display 정리 ","category":"Web","draft":false}}},{"node":{"excerpt":"문제 민식이는 “오민식”이라는 팀이름으로 수없이 많은 로봇대회를 우승했다. 따라서 민식이의 집에는 트로피가 많다. 민식이는 트로피를 어떤 선반 위에 올려놨다. 이 선반은 민식이의 방문을 열고 들어가자마자 선반의 왼쪽이 보인다. 다른말로 하자면, 뒤의 트로피가 앞의 트로피에 가려져 있다는 말이다. 안타깝게도, 높이가 큰 트로피가 높이가 작은 트로피의 왼쪽에…","fields":{"slug":"/algorithm/boj_22/"},"frontmatter":{"date":"February 22, 2021","title":"[BOJ] 트로피 진열 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 김형택은 탑문고의 직원이다. 김형택은 계산대에서 계산을 하는 직원이다. 김형택은 그날 근무가 끝난 후에, 오늘 판매한 책의 제목을 보면서 가장 많이 팔린 책의 제목을 칠판에 써놓는 일도 같이 하고 있다. 오늘 하루 동안 팔린 책의 제목이 입력으로 들어왔을 때, 가장 많이 팔린 책의 제목을 출력하는 프로그램을 작성하시오. 입력 첫째 줄에 오늘 하루 동…","fields":{"slug":"/algorithm/boj_21/"},"frontmatter":{"date":"February 21, 2021","title":"[BOJ] 베스트셀러 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Javascript의 배열에서 자주 사용하는 메서드인 map, reduce, filter에 대해서 정리하면서 비슷하면서도 다른 세가지 메서드를 알아보려고 한다. 세 메서드 모두 ES6에서 추가된 메서드이고, 배열(Array) 타입에 사용되고, 요소들을 파라미터로 받아서 작동한다. 하지만 세 메서드는 결과적으로 다른 메서드이고 그 쓰임새도 다르기 때문에 각…","fields":{"slug":"/javascript/map_reduce_filter/"},"frontmatter":{"date":"February 20, 2021","title":"자바스크립트 map, reduce, filter 정리","category":"Javascript","draft":false}}},{"node":{"excerpt":"문제 N마리의 새가 나무에 앉아있고, 자연수를 배우기 원한다. 새들은 1부터 모든 자연수를 오름차순으로 노래한다. 어떤 숫자 K를 노래할 때, K마리의 새가 나무에서 하늘을 향해 날아간다. 만약, 현재 나무에 앉아있는 새의 수가 지금 불러야 하는 수 보다 작을 때는, 1부터 게임을 다시 시작한다. 나무에 앉아 있는 새의 수 N이 주어질 때, 하나의 수를 …","fields":{"slug":"/algorithm/boj_20/"},"frontmatter":{"date":"February 20, 2021","title":"[BOJ] 새 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 세준이는 영어로만 이루어진 어떤 문서를 검색하는 함수를 만들려고 한다. 이 함수는 어떤 단어가 총 몇 번 등장하는지 세려고 한다. 그러나, 세준이의 함수는 중복되어 세는 것은 빼고 세야 한다. 예를 들어, 문서가 abababa이고, 그리고 찾으려는 단어가 ababa라면, 세준이의 이 함수는 이 단어를 0번부터 찾을 수 있고, 2번부터도 찾을 수 있다…","fields":{"slug":"/algorithm/boj_19/"},"frontmatter":{"date":"February 19, 2021","title":"[BOJ] 문서 검색 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 수 N개 A1, A2, …, AN이 주어진다. A를 오름차순 정렬했을 때, 앞에서부터 K번째 있는 수를 구하는 프로그램을 작성하시오. 입력 첫째 줄에 N(1 ≤ N ≤ 5,000,000)과 K (1 ≤ K ≤ N)이 주어진다. 둘째에는 A1, A2, …, AN이 주어진다. (-109 ≤ Ai ≤ 109) 출력 A를 정렬했을 때, 앞에서부터 K번째 있…","fields":{"slug":"/algorithm/boj_18/"},"frontmatter":{"date":"February 18, 2021","title":"[BOJ] K 번째 수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 N개의 수가 주어졌을 때, 이를 오름차순으로 정렬하는 프로그램을 작성하시오. 입력 첫째 줄에 수의 개수 N(1 ≤ N ≤ 1,000,000)이 주어진다. 둘째 줄부터 N개의 줄에는 숫자가 주어진다. 이 수는 절댓값이 1,000,000보다 작거나 같은 정수이다. 수는 중복되지 않는다. 출력 첫째 줄부터 N개의 줄에 오름차순으로 정렬한 결과를 한 줄에 …","fields":{"slug":"/algorithm/boj_17/"},"frontmatter":{"date":"February 17, 2021","title":"[BOJ] 수 정렬하기2 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 1부터 N까지의 수를 오름차순으로 쓴 수열 1 2 3 … N을 생각하자. 그리고 ’+‘나 ’-’, 또는 ’ ‘(공백)을 숫자 사이에 삽입하자(+는 더하기, -는 빼기, 공백은 숫자를 이어 붙이는 것을 뜻한다). 이렇게 만든 수식의 값을 계산하고 그 결과가 0이 될 수 있는지를 살피자. N이 주어졌을 때 수식의 결과가 0이 되는 모든 수식을 찾는 프로…","fields":{"slug":"/algorithm/boj_16/"},"frontmatter":{"date":"February 16, 2021","title":"[BOJ] 0 만들기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 한수는 크기가 2N × 2N인 2차원 배열을 Z모양으로 탐색하려고 한다. 예를 들어, 2×2배열을 왼쪽 위칸, 오른쪽 위칸, 왼쪽 아래칸, 오른쪽 아래칸 순서대로 방문하면 Z모양이다. 이미지1 만약, N > 1이 라서 왼쪽 위에 있는 칸이 하나가 아니라면, 배열을 크기가 2N-1 × 2N-1로 4등분 한 후에 재귀적으로 순서대로 방문한다. 다음 예는…","fields":{"slug":"/algorithm/boj_15/"},"frontmatter":{"date":"February 15, 2021","title":"[BOJ] Z - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다. 이를 식으로 써보면 Fn = Fn-1 + Fn-2 (n ≥ 2)가 된다. n=17일때 까지 피보나치 수를 써보면 다음과 같다. 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55,…","fields":{"slug":"/algorithm/boj_14/"},"frontmatter":{"date":"February 14, 2021","title":"[BOJ] 피보나치 수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 N개의 수가 주어졌을 때, 이를 오름차순으로 정렬하는 프로그램을 작성하시오. 입력 첫째 줄에 수의 개수 N(1 ≤ N ≤ 10,000,000)이 주어진다. 둘째 줄부터 N개의 줄에는 숫자가 주어진다. 이 수는 10,000보다 작거나 같은 자연수이다. 출력 첫째 줄부터 N개의 줄에 오름차순으로 정렬한 결과를 한 줄에 하나씩 출력한다. 예제 입출력 입력…","fields":{"slug":"/algorithm/boj_13/"},"frontmatter":{"date":"February 12, 2021","title":"[BOJ] 수 정렬하기3 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"이전 포스트 들을 통해서 SSR과 CSR에 대해서 알았고, 왜 SPA가 등장하게 되었는지에 대해서 알게되었다. 그럼 이제 SPA를 구현하기 위해 어떤 프레임워크들이 사용되는지 살펴볼 차례이다. SPA를 구현하기 위해 Angular, Vue, React, Svelt등의 프레임워크들이 사용되는데, 이번 포스트에서는 최근 가장 많이 사용되는 Vue와 React…","fields":{"slug":"/web/react_vs_vue/"},"frontmatter":{"date":"February 11, 2021","title":"React.js vs Vue.js","category":"Web","draft":false}}},{"node":{"excerpt":"문제 2차원 평면 위의 점 N개가 주어진다. 좌표를 x좌표가 증가하는 순으로, x좌표가 같으면 y좌표가 증가하는 순서로 정렬한 다음 출력하는 프로그램을 작성하시오. 입력 첫째 줄에 점의 개수 N (1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N개의 줄에는 i번점의 위치 xi와 yi가 주어진다. (-100,000 ≤ xi, yi ≤ 100,000…","fields":{"slug":"/algorithm/boj_12/"},"frontmatter":{"date":"February 11, 2021","title":"[BOJ] 좌표 정렬하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"지난 포스트에서 SSR과 CSR에 대해서 정리했는데, 보통 SPA는 CSR을 쓰기 때문에 어쩔 수 없는 단점들을 가지게 되었다. 이러한 환경에서 next.js는 리액트와 SPA에 SSR을 반영할 수 있도록 도와주도록 만들어진 프레임워크이다. next.js 1. SPA 등장과 Next.js의 렌더링 방식 예전에는 대부분 SSR 방식을 사용한 MPA(Mult…","fields":{"slug":"/web/next_js/"},"frontmatter":{"date":"February 10, 2021","title":"Next.js 란?","category":"Web","draft":false}}},{"node":{"excerpt":"문제 온라인 저지에 가입한 사람들의 나이와 이름이 가입한 순서대로 주어진다. 이때, 회원들을 나이가 증가하는 순으로, 나이가 같으면 먼저 가입한 사람이 앞에 오는 순서로 정렬하는 프로그램을 작성하시오. 입력 첫째 줄에 온라인 저지 회원의 수 N이 주어진다. (1 ≤ N ≤ 100,000) 둘째 줄부터 N개의 줄에는 각 회원의 나이와 이름이 공백으로 구분되…","fields":{"slug":"/algorithm/boj_11/"},"frontmatter":{"date":"February 10, 2021","title":"[BOJ] 나이순 정렬 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 배열을 정렬하는 것은 쉽다. 수가 주어지면, 그 수의 각 자리수를 내림차순으로 정렬해보자. 입력 첫째 줄에 정렬하고자하는 수 N이 주어진다. N은 1,000,000,000보다 작거나 같은 자연수이다. 출력 첫째 줄에 자리수를 내림차순으로 정렬한 수를 출력한다. 예제 입출력 입력 출력 2143 4321 내 코드 처음에 문자열을 그대로 받은 후에 해당 …","fields":{"slug":"/algorithm/boj_10/"},"frontmatter":{"date":"February 09, 2021","title":"[BOJ] 소트인사이드 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 N개의 수가 주어졌을 때, 이를 오름차순으로 정렬하는 프로그램을 작성하시오. 입력 첫째 줄에 수의 개수 N(1 ≤ N ≤ 1,000)이 주어진다. 둘째 줄부터 N개의 줄에는 숫자가 주어진다. 이 수는 절댓값이 1,000보다 작거나 같은 정수이다. 수는 중복되지 않는다. 출력 첫째 줄부터 N개의 줄에 오름차순으로 정렬한 결과를 한 줄에 하나씩 출력한다…","fields":{"slug":"/algorithm/boj_9/"},"frontmatter":{"date":"February 08, 2021","title":"[BOJ] 수 정렬하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"자바스크립트 특징 자바스크립트는 인터프리터 언어이다. 실행 속도가 느릴 것 같지만 웹 브라우저에서 실행 시간에 컴파일 하는 JIT컴파일러를 내장하고 있어 빠르다. 동적 프로토타입 기반 객체 지향 언어이다. C++이나 JAVA와 같이 클래스 기반 객체 지향 언어가 아닌 프로토타입을 상속하는 프로토타입 기반 객체 지향 언어이다. 동적 타입 언어이다. 실행 전…","fields":{"slug":"/javascript/modern_javascript(1)/"},"frontmatter":{"date":"February 07, 2021","title":"[책]모던 자바스크립트 입문 정리 (1)","category":"Javascript","draft":false}}},{"node":{"excerpt":"문제 민혁이는 소셜 네트워크 사이트에서 친구를 만드는 것을 좋아하는 친구이다. 우표를 모으는 취미가 있듯이, 민혁이는 소셜 네트워크 사이트에서 친구를 모으는 것이 취미이다. 어떤 사이트의 친구 관계가 생긴 순서대로 주어졌을 때, 두 사람의 친구 네트워크에 몇 명이 있는지 구하는 프로그램을 작성하시오. 친구 네트워크란 친구 관계만으로 이동할 수 있는 사이를…","fields":{"slug":"/algorithm/boj_8/"},"frontmatter":{"date":"February 07, 2021","title":"[BOJ] 친구 네트워크 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 N개의 정수 A1, A2, …, AN이 주어져 있을 때, 이 안에 X라는 정수가 존재하는지 알아내는 프로그램을 작성하시오. 입력 첫째 줄에 자연수 N(1 ≤ N ≤ 100,000)이 주어진다. 다음 줄에는 N개의 정수 A1, A2, …, AN이 주어진다. 다음 줄에는 M(1 ≤ M ≤ 100,000)이 주어진다. 다음 줄에는 M개의 수들이 주어지는데…","fields":{"slug":"/algorithm/boj_7/"},"frontmatter":{"date":"February 06, 2021","title":"[BOJ] 수 찾기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문자열 S가 주어졌을 때, SHA-256 해시값을 구하는 프로그램을 작성하시오. 입력 첫째 줄에 문자열 S가 주어진다. S는 알파벳 대문자와 소문자, 그리고 숫자로만 이루어져 있으며, 길이는 최대 50이다. 출력 첫째 줄에 S의 SHA-256 해시값을 출력한다. 예제 입출력 입력 출력 Baekjoon 9944e1862efbb2a4e2486392dc6…","fields":{"slug":"/algorithm/boj_6/"},"frontmatter":{"date":"February 05, 2021","title":"[BOJ] SHA-256 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 창영이는 강산이의 비밀번호를 훔치기 위해서 강산이가 사용하는 컴퓨터에 키로거를 설치했다. 며칠을 기다린 끝에 창영이는 강산이가 비밀번호 창에 입력하는 글자를 얻어냈다. 키로거는 사용자가 키보드를 누른 명령을 모두 기록한다. 따라서, 강산이가 비밀번호를 입력할 때, 화살표나 백스페이스를 입력해도 정확한 비밀번호를 알아낼 수 있다. 강산이가 비밀번호 창…","fields":{"slug":"/algorithm/boj_5/"},"frontmatter":{"date":"February 03, 2021","title":"[BOJ] 키로거 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"최근 리액트를 공부하면서 에 대해서 공부하게 되면서 자연스럽게, 서버 사이드 렌더링과 클라이언트 사이드 렌더링 등 개념에 대해서 확실히 알고 넘어가야겠다는 생각이 들었다. 그래서 보통 이런 개념을 쌓을 때는 서로 비교하면서 공부하는 것이 효율적이기 때문에 SSR과 CSR의 특징을 서로 비교하면서 알아보려고 한다. 1. SSR(Server-Side Rend…","fields":{"slug":"/web/ssr_vs_csr/"},"frontmatter":{"date":"February 02, 2021","title":"SSR vs CSR, SPA vs MPA","category":"Web","draft":false}}},{"node":{"excerpt":"문제 여러분도 알다시피 여러분의 프린터 기기는 여러분이 인쇄하고자 하는 문서를 인쇄 명령을 받은 ‘순서대로’, 즉 먼저 요청된 것을 먼저 인쇄한다. 여러 개의 문서가 쌓인다면 Queue 자료구조에 쌓여서 FIFO - First In First Out - 에 따라 인쇄가 되게 된다. 하지만 상근이는 새로운 프린터기 내부 소프트웨어를 개발하였는데, 이 프린터…","fields":{"slug":"/algorithm/boj_4/"},"frontmatter":{"date":"February 02, 2021","title":"[BOJ] 프린터 큐 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 스택 (stack)은 기본적인 자료구조 중 하나로, 컴퓨터 프로그램을 작성할 때 자주 이용되는 개념이다. 스택은 자료를 넣는 (push) 입구와 자료를 뽑는 (pop) 입구가 같아 제일 나중에 들어간 자료가 제일 먼저 나오는 (LIFO, Last in First out) 특성을 가지고 있다. 1부터 n까지의 수를 스택에 넣었다가 뽑아 늘어놓음으로써,…","fields":{"slug":"/algorithm/boj_3/"},"frontmatter":{"date":"February 01, 2021","title":"[BOJ] 스택 수열 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 카지노에서 제일 인기 있는 게임 블랙잭의 규칙은 상당히 쉽다. 카드의 합이 21을 넘지 않는 한도 내에서, 카드의 합을 최대한 크게 만드는 게임이다. 블랙잭은 카지노마다 다양한 규정이 있다. 한국 최고의 블랙잭 고수 김정인은 새로운 블랙잭 규칙을 만들어 상근, 창영이와 게임하려고 한다. 김정인 버전의 블랙잭에서 각 카드에는 양의 정수가 쓰여 있다. …","fields":{"slug":"/algorithm/boj_2/"},"frontmatter":{"date":"January 31, 2021","title":"[BOJ] 블랙잭 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 다장조는 c d e f g a b C, 총 8개 음으로 이루어져있다. 이 문제에서 8개 음은 다음과 같이 숫자로 바꾸어 표현한다. c는 1로, d는 2로, …, C를 8로 바꾼다. 1부터 8까지 차례대로 연주한다면 ascending, 8부터 1까지 차례대로 연주한다면 descending, 둘 다 아니라면 mixed 이다. 연주한 순서가 주어졌을 때,…","fields":{"slug":"/algorithm/boj_1/"},"frontmatter":{"date":"January 30, 2021","title":"[BOJ] 음계 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다. 조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다.\n조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다.\n조건 3. n의 다음 큰 숫자는 조건 1, 2를 만족하는 수 중 가장 작은 수 입니다.\n예를 들어서 78(1001110)의 다음 …","fields":{"slug":"/algorithm/programmers_52/"},"frontmatter":{"date":"January 29, 2021","title":"[프로그래머스] 다음 큰 숫자 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 괄호가 바르게 짝지어졌다는 것은 ’(’ 문자로 열렸으면 반드시 짝지어서 ’)’ 문자로 닫혀야 한다는 뜻입니다. 예를 들어 ()() 또는 (())() 는 올바른 괄호입니다.\n)()( 또는 (()( 는 올바르지 않은 괄호입니다.\n’(’ 또는 ’)’ 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, …","fields":{"slug":"/algorithm/programmers_51/"},"frontmatter":{"date":"January 27, 2021","title":"[프로그래머스] 올바른 괄호 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.\n※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다. 예…","fields":{"slug":"/algorithm/programmers_50/"},"frontmatter":{"date":"January 26, 2021","title":"[프로그래머스] 다리를 지나는 트럭 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 n개의 음이 아닌 정수가 있습니다. 이 수를 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 1, 1, 1, 1, 1로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다. 사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 …","fields":{"slug":"/algorithm/programmers_49/"},"frontmatter":{"date":"January 25, 2021","title":"[프로그래머스] 타겟 넘버 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.\n전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다. 구조대 : 119\n박준영 : 97 674 223\n지영석 : 11 9552 4421\n전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의…","fields":{"slug":"/algorithm/programmers_48/"},"frontmatter":{"date":"January 24, 2021","title":"[프로그래머스] 전화번호 목록 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다. 예를 들어, 숫자 1924에서 수 두 개를 제거하면 19, 12, 14, 92, 94, 24 를 만들 수 있습니다. 이 중 가장 큰 숫자는 94 입니다. 문자열 형식으로 숫자 number와 제거할 수의 개수 k가 solution 함수의 매개변수로 주어집니다. …","fields":{"slug":"/algorithm/programmers_47/"},"frontmatter":{"date":"January 22, 2021","title":"[프로그래머스] 큰 수 만들기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요. 예를 들어, 주어진 정수가 6, 10, 2라면 6102, 6210, 1062, 1026, 2610, 2106를 만들 수 있고, 이중 가장 큰 수는 6210입니다. 0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치…","fields":{"slug":"/algorithm/programmers_46/"},"frontmatter":{"date":"January 21, 2021","title":"[프로그래머스] 가장 큰 수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다. 또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다. 먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 …","fields":{"slug":"/algorithm/programmers_45/"},"frontmatter":{"date":"January 20, 2021","title":"[프로그래머스] 기능개발 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요. 제한사항 prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.\nprices의 길이는 2 이상 100,000 이하입니다. 입출력 예 prices return 1…","fields":{"slug":"/algorithm/programmers_44/"},"frontmatter":{"date":"January 19, 2021","title":"[프로그래머스] 주식가격 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다. 그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다. 이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다. 이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다. 인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다. 나…","fields":{"slug":"/algorithm/programmers_43/"},"frontmatter":{"date":"January 17, 2021","title":"[프로그래머스] 프린터 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 카카오톡 게임별의 하반기 신규 서비스로 다트 게임을 출시하기로 했다. 다트 게임은 다트판에 다트를 세 차례 던져 그 점수의 합계로 실력을 겨루는 게임으로, 모두가 간단히 즐길 수 있다.\n갓 입사한 무지는 코딩 실력을 인정받아 게임의 핵심 부분인 점수 계산 로직을 맡게 되었다. 다트 게임의 점수 계산 로직은 아래와 같다. 다트 게임은 총 3번의 …","fields":{"slug":"/algorithm/programmers_42/"},"frontmatter":{"date":"January 16, 2021","title":"[프로그래머스] 다트 게임 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 문제그림 슈퍼 게임 개발자 오렐리는 큰 고민에 빠졌다. 그녀가 만든 프랜즈 오천성이 대성공을 거뒀지만, 요즘 신규 사용자의 수가 급감한 것이다. 원인은 신규 사용자와 기존 사용자 사이에 스테이지 차이가 너무 큰 것이 문제였다. 이 문제를 어떻게 할까 고민 한 그녀는 동적으로 게임 시간을 늘려서 난이도를 조절하기로 했다. 역시 슈퍼 개발자라 대부…","fields":{"slug":"/algorithm/programmers_41/"},"frontmatter":{"date":"January 15, 2021","title":"[프로그래머스] 실패율 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"입력 형식 입력으로 지도의 한 변 크기 n 과 2개의 정수 배열 arr1, arr2가 들어온다. 1 ≦ n ≦ 16\narr1, arr2는 길이 n인 정수 배열로 주어진다.\n정수 배열의 각 원소 x를 이진수로 변환했을 때의 길이는 n 이하이다. 즉, 0 ≦ x ≦ 2n - 1을 만족한다. 출력 형식 원래의 비밀지도를 해독하여 ’#’, 공백으로 구성된 문자열…","fields":{"slug":"/algorithm/programmers_40/"},"frontmatter":{"date":"January 14, 2021","title":"[프로그래머스] 비밀지도 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 S사에서는 각 부서에 필요한 물품을 지원해 주기 위해 부서별로 물품을 구매하는데 필요한 금액을 조사했습니다. 그러나, 전체 예산이 정해져 있기 때문에 모든 부서의 물품을 구매해 줄 수는 없습니다. 그래서 최대한 많은 부서의 물품을 구매해 줄 수 있도록 하려고 합니다. 물품을 구매해 줄 때는 각 부서가 신청한 금액만큼을 모두 지원해 줘야 합니다.…","fields":{"slug":"/algorithm/programmers_39/"},"frontmatter":{"date":"January 13, 2021","title":"[프로그래머스] 예산 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니다. 문제설명 사진 이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다.\n맨 처음 왼손 엄지손가락은 * 키패드에 오른손 엄지손가락은 # 키패드 위치에서 시작하며, 엄지손가락을 사용하는 규칙은 다음과 같습니다. 엄지손가락은 상하좌우 4가지 방향으로만…","fields":{"slug":"/algorithm/programmers_38/"},"frontmatter":{"date":"January 12, 2021","title":"[프로그래머스] 키패드 누르기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 길이가 같은 두 1차원 정수 배열 a, b가 매개변수로 주어집니다. a와 b의 내적을 return 하도록 solution 함수를 완성해주세요. 이때, a와 b의 내적은 a0b0 + a1b1 + … + an-1*bn-1 입니다. (n은 a, b의 길이) 제한사항 a, b의 길이는 1 이상 1,000 이하입니다.\na, b의 모든 수는 -1,000 …","fields":{"slug":"/algorithm/programmers_37/"},"frontmatter":{"date":"January 11, 2021","title":"[프로그래머스] 내적 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 자연수 n이 매개변수로 주어집니다. n을 3진법 상에서 앞뒤로 뒤집은 후, 이를 다시 10진법으로 표현한 수를 return 하도록 solution 함수를 완성해주세요. 제한사항 n은 1 이상 100,000,000 이하인 자연수입니다. 입출력 예 n result 45 7 125 229 내 코드 먼저 10진법을 3진법으로 바꾸기 위해 주어진 수를 …","fields":{"slug":"/algorithm/programmers_36/"},"frontmatter":{"date":"January 10, 2021","title":"[프로그래머스] 3진법 뒤집기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 게임개발자인 죠르디는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다.\n죠르디는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다.\n문제사진1 게임 화면은 1 x 1 크기의 칸들로 이루어진 N x N 크기의 정사각 격자이며 위쪽에는 크레인이 있고 오른쪽에는 바구니가 있습니다. (위 그림은 5 x 5…","fields":{"slug":"/algorithm/programmers_35/"},"frontmatter":{"date":"January 09, 2021","title":"[프로그래머스] 크레인 인형뽑기 게임 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복…","fields":{"slug":"/algorithm/programmers_34/"},"frontmatter":{"date":"January 08, 2021","title":"[프로그래머스] 체육복 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"아이템 57 : 소스맵을 사용하여 타입스크립트 디버깅하기 타입스크립트 코드를 실행한다는 것은, 엄밀히 말해 타입스크립트 컴파일러가 생성한 자바스크립트 코드를 실행하는 것이다. 이러한 것은 디버깅이 필요한 시점에 깨닫게 된다. 디버깅 시점의 변환된 JS 코드는 복잡해서 디버깅이 어렵다. 그렇기 때문에  이라는 해결책이 나왔다. 소스맵은 변환된 코드의 위치와…","fields":{"slug":"/typescript/effective_ts(8)/"},"frontmatter":{"date":"January 06, 2021","title":"[Typescript] 이펙티브 타입스크립트 정리(아이템57 ~ 62)","category":"Typescript","draft":false}}},{"node":{"excerpt":"문제 설명 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다. 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …\n2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2,…","fields":{"slug":"/algorithm/programmers_33/"},"frontmatter":{"date":"January 06, 2021","title":"[프로그래머스] 모의고사 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요. 소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.\n(1은 소수가 아닙니다.) 제한 조건 n은 2이상 1000000이하의 자연수입니다. 입출력 예 n result 10 4 5 3 내 코드 이 문제의 경우, 소수를 판별하는 것에 대해 수리적…","fields":{"slug":"/algorithm/programmers_32/"},"frontmatter":{"date":"January 05, 2021","title":"[프로그래머스] 소수 찾기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 3, 12를 반환해야 합니다. 제한 사항 두 수는 1이상 1000000…","fields":{"slug":"/algorithm/programmers_31/"},"frontmatter":{"date":"January 04, 2021","title":"[프로그래머스] 최대공약수와 최소공배수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다. 예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solu…","fields":{"slug":"/algorithm/programmers_30/"},"frontmatter":{"date":"January 03, 2021","title":"[프로그래머스] 콜라츠 추측 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요. 제한 조건 x는 1 이상, 10000 이하인 정수입니다. 입출력 예 …","fields":{"slug":"/algorithm/programmers_29/"},"frontmatter":{"date":"January 02, 2021","title":"[프로그래머스] 하샤드 수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다.\n전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 *으로 가린 문자열을 리턴하는 함수, solution을 완성해주세요. 제한 조건 s는 길이 4 이상, 20이하인 문자열입니다. 입출력 예 p…","fields":{"slug":"/algorithm/programmers_28/"},"frontmatter":{"date":"January 01, 2021","title":"[프로그래머스] 핸드폰 번호 가리기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 이 문제에는 표준 입력으로 두 개의 정수 n과 m이 주어집니다.\n별(*) 문자를 이용해 가로의 길이가 n, 세로의 길이가 m인 직사각형 형태를 출력해보세요. 제한 조건 n과 m은 각각 1000 이하인 자연수입니다. 예시 입력 출력 내 코드 주어진 별의 개수와 줄의 개수를 문을 통해 했고, 가 개행되지 않도록 를 썼다. 다른 사람의 코드 문자열의…","fields":{"slug":"/algorithm/programmers_27/"},"frontmatter":{"date":"December 31, 2020","title":"[프로그래머스] 직사각형 별찍기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 임의의 양의 정수 n에 대해, n이 어떤 양의 정수 x의 제곱인지 아닌지 판단하려 합니다.\nn이 양의 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 양의 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요. 제한 사항 n은 1이상, 50000000000000 이하인 양의 정수입니다. 입출력 예 n return 121 144 3 …","fields":{"slug":"/algorithm/programmers_26/"},"frontmatter":{"date":"December 30, 2020","title":"[프로그래머스] 정수 제곱근 판별 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요. 제한 사항 n은 0 이상 3000이하인 정수입니다. 입출력 예 n return 12 28 5 6 내 코드 단순하게 생각해서 1부터 n까지 숫자로 n을 나누어서 나눠 떨어지는 숫자만 더하여 답을 구했다. 다른 사람의 코드 list comprehensi…","fields":{"slug":"/algorithm/programmers_25/"},"frontmatter":{"date":"December 29, 2020","title":"[프로그래머스] 약수의 합 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.\n예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다. 제한사항 N의 범위 : 100,000,000 이하의 자연수 입출력 예 N answer 123 6 987 24 내 코드 을 문자열로 변환하여서 한문자씩 숫자…","fields":{"slug":"/algorithm/programmers_24/"},"frontmatter":{"date":"December 28, 2020","title":"[프로그래머스] 자릿수 더하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각 SUN,MON,TUE,WED,THU,FRI,SAT입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로…","fields":{"slug":"/algorithm/programmers_23/"},"frontmatter":{"date":"December 27, 2020","title":"[프로그래머스] 2016년 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다. 예를 들어 AB는 1만큼 밀면 BC가 되고, 3만큼 밀면 DE가 됩니다. z는 1만큼 밀면 a가 됩니다. 문자열 s와 거리 n을 입력받아 s를 n만큼 민 암호문을 만드는 함수, solution을 완성해 보세요. 제한 조건 공백은 아무리 …","fields":{"slug":"/algorithm/programmers_22/"},"frontmatter":{"date":"December 26, 2020","title":"[프로그래머스] 시저 암호 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요. 제한 조건 x는 -10000000 이상, 10000000 이하인 정수입니다.\nn은 1000 이하인 자연수입니다. 입출력 예 x n …","fields":{"slug":"/algorithm/programmers_21/"},"frontmatter":{"date":"December 25, 2020","title":"[프로그래머스] x만큼 간격이 있는 n개의 숫자 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 5,4,3,2,1을 리턴합니다. 제한 조건 n은 10,000,000,000이하인 자연수입니다. 입출력 예 n return 12345 5,4,3,2,1 내 코드 받은 숫자를 을 통해 문자열로 바꾸고 함수로 문자열을 뒤집은 후에 그것을 배열에 …","fields":{"slug":"/algorithm/programmers_20/"},"frontmatter":{"date":"December 24, 2020","title":"[프로그래머스] 자연수 뒤집어 배열로 만들기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요. 제한 조건 행렬 arr1, arr2의 행과 열의 길이는 500을 넘지 않습니다. 입출력 예 arr1 arr2 return [1,2,…","fields":{"slug":"/algorithm/programmers_19/"},"frontmatter":{"date":"December 23, 2020","title":"[프로그래머스] 행렬의 덧셈 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요. 제한 사항 문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다.\n첫…","fields":{"slug":"/algorithm/programmers_18/"},"frontmatter":{"date":"December 22, 2020","title":"[프로그래머스] 이상한 문자 만들기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 정수를 담고 있는 배열 arr의 평균값을 return하는 함수, solution을 완성해보세요. 제한사항 arr은 길이 1 이상, 100 이하인 배열입니다.\narr의 원소는 -10,000 이상 10,000 이하인 정수입니다. 입출력 예 arr return 1,2,3,4 2.5 5,5 5 내 코드 sum에 배열의 모든 요소를 더해서 배열의 길이(…","fields":{"slug":"/algorithm/programmers_17/"},"frontmatter":{"date":"December 21, 2020","title":"[프로그래머스] 평균구하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 길이가 n이고, 수박수박수박수…와 같은 패턴을 유지하는 문자열을 리턴하는 함수, solution을 완성하세요. 예를들어 n이 4이면 수박수박을 리턴하고 3이라면 수박수를 리턴하면 됩니다. 제한 조건 n은 길이 10,000이하인 자연수입니다. 입출력 예 n return 3 수박수 4 수박수박 내 코드 완전 하드코딩해서 문제를 푼 것 같다. 라는 …","fields":{"slug":"/algorithm/programmers_16/"},"frontmatter":{"date":"December 20, 2020","title":"[프로그래머스] 수박수박수박수박수박수? - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수, solution을 작성해주세요.\ndivisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요. 제한사항 arr은 자연수를 담은 배열입니다.\n정수 i, j에 대해 i ≠ j 이면 arri ≠ arrj …","fields":{"slug":"/algorithm/programmers_15/"},"frontmatter":{"date":"December 19, 2020","title":"[프로그래머스] 나누어 떨어지는 숫자 배열 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다. 제한 조건 n은 1이상 8000000000 이하인 자연수입니다. 입출력 예 n return 118372 873211 내 코드 을 문자열로 만든 후에 내…","fields":{"slug":"/algorithm/programmers_14/"},"frontmatter":{"date":"December 18, 2020","title":"[프로그래머스] 정수 내림차순으로 배치하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 String형 배열 seoul의 element중 Kim의 위치 x를 찾아, 김서방은 x에 있다는 String을 반환하는 함수, solution을 완성하세요. seoul에 Kim은 오직 한 번만 나타나며 잘못된 값이 입력되는 경우는 없습니다. 제한 사항 seoul은 길이 1 이상, 1000 이하인 배열입니다.\nseoul의 원소는 길이 1 이상, …","fields":{"slug":"/algorithm/programmers_12/"},"frontmatter":{"date":"December 17, 2020","title":"[프로그래머스] 서울에서 김서방 찾기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 정수 num이 짝수일 경우 Even을 반환하고 홀수인 경우 Odd를 반환하는 함수, solution을 완성해주세요. 제한 조건 num은 int 범위의 정수입니다.\n0은 짝수입니다. 입출력 예 num return 3 Odd 4 Even 내 코드 파이썬에서 삼항연산자를 쓸 때, 형태로 쓴다. 삼항연산자를 써서 간단히 해결 다른 사람의 코드 내가 한…","fields":{"slug":"/algorithm/programmers_13/"},"frontmatter":{"date":"December 17, 2020","title":"[프로그래머스] 짝수와 홀수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 문자열 s에 나타나는 문자를 큰것부터 작은 순으로 정렬해 새로운 문자열을 리턴하는 함수, solution을 완성해주세요.\ns는 영문 대소문자로만 구성되어 있으며, 대문자는 소문자보다 작은 것으로 간주합니다. 제한 사항 str은 길이 1 이상인 문자열입니다. 입출력 예 s return Zbcdefg gfedcbZ 내 코드 처음에는 메서드를 쓰지 …","fields":{"slug":"/algorithm/programmers_11/"},"frontmatter":{"date":"December 17, 2020","title":"[프로그래머스] 문자열 내림차순으로 배치하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다. 예를 들어 strings가 sun, bed, car이고 n이 1이면 각 단어의 인덱스 1의 문자 u, e, a로 strings를 정렬합니다. 제한 조건 strings는 길이 1 이상, 50이하인 배열입니다.\ns…","fields":{"slug":"/algorithm/programmers_10/"},"frontmatter":{"date":"December 16, 2020","title":"[프로그래머스] 문자열 내 마음대로 정렬하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 두 정수 a, b가 주어졌을 때 a와 b 사이에 속한 모든 정수의 합을 리턴하는 함수, solution을 완성하세요.\n예를 들어 a = 3, b = 5인 경우, 3 + 4 + 5 = 12이므로 12를 리턴합니다. 제한 조건 a와 b가 같은 경우는 둘 중 아무 수나 리턴하세요.\na와 b는 -10,000,000 이상 10,000,000 이하인 정수…","fields":{"slug":"/algorithm/programmers_9/"},"frontmatter":{"date":"December 15, 2020","title":"[프로그래머스] 두 정수 사이의 합 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 문자열 s의 길이가 4 혹은 6이고, 숫자로만 구성돼있는지 확인해주는 함수, solution을 완성하세요. 예를 들어 s가 a234이면 False를 리턴하고 1234라면 True를 리턴하면 됩니다. 제한 사항 s는 길이 1 이상, 길이 8 이하인 문자열입니다. 입출력 예 s return a234 false 1234 true 내 코드 코드를 깔끔…","fields":{"slug":"/algorithm/programmers_8/"},"frontmatter":{"date":"December 15, 2020","title":"[프로그래머스] 문자열 다루기 기본 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 ‘p’의 개수와 ‘y’의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. ‘p’, ‘y’ 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다. 예를 들어 s가 pPoooyY면 …","fields":{"slug":"/algorithm/programmers_7/"},"frontmatter":{"date":"December 14, 2020","title":"[프로그래머스] 문자열 내 p와 y의 개수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 4,3,2,1인 경우는 4,3,2를 리턴 하고, 10면 -1을 리턴 합니다. 제한 조건 arr은 길이 1 이상인 배열입니다.\n인덱스 i, j에…","fields":{"slug":"/algorithm/programmers_6/"},"frontmatter":{"date":"December 13, 2020","title":"[프로그래머스] 제일 작은 수 제거하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 예를 들면, arr = 1, 1, 3, 3, 0, 1, 1 이면 1, 3,…","fields":{"slug":"/algorithm/programmers_5/"},"frontmatter":{"date":"December 13, 2020","title":"[프로그래머스] 같은 숫자는 싫어 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 단어 s의 가운데 글자를 반환하는 함수, solution을 만들어 보세요. 단어의 길이가 짝수라면 가운데 두글자를 반환하면 됩니다. 제한사항 s는 길이가 1 이상, 100이하인 스트링입니다. 입출력 예 s return “abcde” “c” “qwer” “we” 내 코드 문제 그대로 주어진 문자열이 홀수인지 짝수인지에 따라 분기하여 처리하였다. …","fields":{"slug":"/algorithm/programmers_4/"},"frontmatter":{"date":"December 12, 2020","title":"[프로그래머스] 가운데 글자 가져오기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다. 예를 들어 array가 1, 5, 2, 6, 3, 7, 4, i = 2, j = 5, k = 3이라면 array의 2번째부터 5번째까지 자르면 5, 2, 6, 3입니다. 1에서 나온 배열을 정렬하면 2, 3, 5, 6입니다. 2에서 나온 …","fields":{"slug":"/algorithm/programmers_3/"},"frontmatter":{"date":"December 11, 2020","title":"[프로그래머스] k번째 수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.\n마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요. 제한사항 …","fields":{"slug":"/algorithm/programmers_2/"},"frontmatter":{"date":"December 11, 2020","title":"[프로그래머스] 완주하지 못한 선수 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 설명 정수 배열 numbers가 주어집니다. numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 return 하도록 solution 함수를 완성해주세요. 제한사항 numbers의 길이는 2 이상 100 이하입니다.\nnumbers의 모든 수는 0 이상 100 이하입니다. 입출력 예 n…","fields":{"slug":"/algorithm/programmers_1/"},"frontmatter":{"date":"December 10, 2020","title":"[프로그래머스] 두 개 뽑아서 더하기 - 파이썬","category":"Algorithm","draft":false}}},{"node":{"excerpt":"리액트의 가장 큰 매력 중 하나는 앱을 설계하는 방식이다. 이번에는 리액트로 상품들을 검색할 수 있는 데이터 테이블을 만드는 과정을 생각해보자. 목업으로 시작하기 JSON API와 목업을 디자이너로부터 받았다고 가정하자. 목업과 JSON은 아래와 같다.\n 1단계 : UI를 컴포넌트 계층 구조로 나누기 첫 번째 할 것은 목업에서 모든 컴포넌트 주변에 박스를…","fields":{"slug":"/react/React_Doc(11)/"},"frontmatter":{"date":"December 06, 2020","title":"[리액트 주요 개념] 리액트로 생각하기","category":"React","draft":false}}},{"node":{"excerpt":"리액트는 강력한 합성 모델을 가지고 있기 때문에 상속 대신 합성을 사용해서 컴포넌트간 코드를 재사용 하는 것이 좋다. 그렇기 때문에 이번에는 리액트 개발 시 상속으로 인해 부딫히는 문제를 어떻게 합성으로 해결하는지 살펴보자. 컴포넌트에서 다른 컴포넌트 담기 어떤 컴포넌트는 어떤 자식 컴포넌트가 들어올 지 미리 예상할 수 없는 경우가 있다. 나 와 같은 컴…","fields":{"slug":"/react/React_Doc(10)/"},"frontmatter":{"date":"December 05, 2020","title":"[리액트 주요 개념] 합성(Composition) vs 상속(Inheritance)","category":"React","draft":false}}},{"node":{"excerpt":"동일한 데이터에 변경사항을 여러 컴포넌트에 반영할 때에는 가장 가까운 공통 조상으로 state를 끌어올려야한다. 그것에 대해 알아보기 위해 온도 계산기를 만들면서 이해해보자. 먼저 라는 컴포넌트를 만들자. 이 컴포넌트는 섭씨 온도를 의미하는  prop을 받아서 이 온도가 물이 끓기에 적합한지를 판단하여 출력한다. 그리고 다음엔 라는 컴포넌트를 만들것인데,…","fields":{"slug":"/react/React_Doc(9)/"},"frontmatter":{"date":"December 05, 2020","title":"[리액트 주요 개념] State 끌어올리기","category":"React","draft":false}}},{"node":{"excerpt":"제어 컴포넌트 HTML에서는 ,,와 같은 폼 엘리먼트가 사용자 입력 기반으로 자신의 state를 관리하고 업데이트 한다. 리액트에서는 컴포넌트의 state 속성에 유지되고 에 의해 업데이트된다. 리액트의 state를 신뢰 가능한 단일 출처로 만들어서 결합하는 것이 가능하다. 폼을 렌더링하는 리액트 컴포넌트는 폼에 발생하는 사용자의 입력 값을 제어한다. 이…","fields":{"slug":"/react/React_Doc(8)/"},"frontmatter":{"date":"December 05, 2020","title":"[리액트 주요 개념] 폼","category":"React","draft":false}}},{"node":{"excerpt":"JS에서 리스트를 변환하는 방법을 살펴보자. 아래는 함수를 이용하여 배열의 값을 두배로 만들어서 에서 반환하는 새 배열을  변수에 저장해서 할당 후에 로그를 확인하는 코드이다. 리액트에서 배열을 엘리먼트 리스트로 만드는 방식도 동일하다. 여러 컴포넌트 렌더링 하기 엘리먼트 모음을 만들어서 중괄호 를 이용해서 JSX에 포함시킬 수 있다. JS  함수를 사용…","fields":{"slug":"/react/React_Doc(7)/"},"frontmatter":{"date":"December 04, 2020","title":"[리액트 주요 개념] 리스트와 Key","category":"React","draft":false}}},{"node":{"excerpt":"React에서 원하는 동작을 캡슐화 하는 컴포넌트를 만들 수 있다. 조건부 렌더링은 JS에서의 조건처리와 같이 동작한다. 나 와 같은 JS 연산자를 현재 상태를 나타내는 엘리먼트를 만드는데 사용하면 리액트는 현재 상태에 맞게 UI를 업데이트 한다. 아래 예시에서는  prop에 따라 다른 인사말을 렌더링한다. 엘리먼트 변수 엘리먼트를 저장하기 위해서 변수를…","fields":{"slug":"/react/React_Doc(6)/"},"frontmatter":{"date":"December 04, 2020","title":"[리액트 주요 개념] 조건부 렌더링","category":"React","draft":false}}},{"node":{"excerpt":"리액트 엘리먼트에서 이벤트 처리는 DOM 엘리먼트에서 이벤트 처리와 유사하다. 차이점이라면 리액트에서는 소문자 대신 camelCase를 사용하고 JSX를 사용해서 문자열이 아닌 함수로 이벤트 핸들러를 전달한다. 리액트에서는 를 반환해도 기본 동작을 방지할 수 없고 반드시 를 명시적으로 호출해야 한다.  리액트에서는 DOM 엘리먼트 생성 후 리스너를 추가하…","fields":{"slug":"/react/React_Doc(5)/"},"frontmatter":{"date":"December 03, 2020","title":"[리액트 주요 개념] Event 처리하기","category":"React","draft":false}}},{"node":{"excerpt":"지금까지 에서 UI를 업데이트하는 한가지만 배웠고, 렌더링된 출력값을 변경하기 위해 를 호출했다. 이번 포스트에서는  컴포넌트를 완전히 재사용하고 캡슐화하는 방법을 살펴보자. 이 컴포넌트는 스스로 타이머를 설정하고 매초 스스로 업데이트 할 것이다.  여기서 누락된 중요한 것은 이 타이머를 설정하고 매초 UI를 업데이트하는 것이 의 구현 세부 사항이 되어야…","fields":{"slug":"/react/React_Doc(4)/"},"frontmatter":{"date":"December 02, 2020","title":"[리액트 주요 개념] State와 Lifecycle","category":"React","draft":false}}},{"node":{"excerpt":"컴포넌트를 통해서 UI를 재사용 가능한 여러 조각으로 나누고 사용할 수 있다. 컴포넌트 API 레퍼런스에서는 자세한 API 레퍼런스를 확인할 수 있고, 이번 포스트에서는 주요 개념만 알아볼 것이다. 개념적으로 컴포넌트는 JavaScript 함수와 유사하다. “props”라는 임의의 입력을 받아서 화면에 어떻게 표시되는지 기술하는 React 엘리먼트를 반환…","fields":{"slug":"/react/React_Doc(3)/"},"frontmatter":{"date":"December 02, 2020","title":"[리액트 주요 개념] Components와 Props","category":"React","draft":false}}},{"node":{"excerpt":"엘리먼트 렌더링 엘리먼트는 React 앱의 가장 작은 단위. 엘리먼트는 화면에 표시할 내용을 기술한다. 일반적인 DOM 엘리먼트와 다르게 React 엘리먼트는 일반 객체이고 쉽게 생성할 수 있다. React DOM은 React 엘리먼트와 일치하도록 DOM을 업데이트 한다. 컴포넌트와 엘리먼트를 헷갈릴 수 있는데, 엘리먼트는 컴포넌트의 이다. DOM에 엘리…","fields":{"slug":"/react/React_Doc(2)/"},"frontmatter":{"date":"December 01, 2020","title":"[리액트 주요 개념] 엘리먼트 렌더링","category":"React","draft":false}}},{"node":{"excerpt":"JSX 소개 위 문법은 문자열도 아니고, HTML도 아닌 JSX라 불리는 Javascript를 확장한 문법이다. JSX를 템플릿 언어로만 생각할 수 있지만, Javascript의 모든 기능을 포함하고 있다. JSX는 React 엘리먼트를 생성한다. React에서는 이벤트가 처리되는 방식과 시간에 따라 가 변하는 방식과 화면에 표시하기 위해서 데이터가 준비…","fields":{"slug":"/react/React_Doc(1)/"},"frontmatter":{"date":"December 01, 2020","title":"[리액트 주요 개념] JSX 소개","category":"React","draft":false}}},{"node":{"excerpt":"과거의 이동 표시 하기 게임의 이동 정보를 기록하고 있기 때문에 플레이어에게 과거의 이동을 목록으로 표시할 수 있다. React 엘리먼트 배열을 사용하면 여러 아이템 렌더링이 가능하다. Javascript에서 배열은 데이터를 다른 데이터와 매핑할 때 사용하는  함수가 있다.  함수를 활용하여 이동 기록을 화면에 표시되는 React 버튼 엘리먼트로 맵핑할 …","fields":{"slug":"/react/React_Basic(6)/"},"frontmatter":{"date":"November 18, 2020","title":"[리액트 튜토리얼] 시간여행 기능 추가(2)","category":"React","draft":false}}},{"node":{"excerpt":"동작에 대한 기록 저장하기 이전의 코드에서 를 사용하여 매 동작 할 때마다  배열의 새로운 복사본을 만들어서 불변 객체로 취급하였다. 이를 통해 과거의  배열의 모든 버전을 저장하고 이미 지나간 차례를 탐색할 수 있다. 과거의  배열들을0 라는 다른 배열에 저장하고 배열에는 첫 동작부터 마지막 동작까지 모든 게임판의 상태가 저장될 것이다. 이제 정해야 할…","fields":{"slug":"/react/React_Basic(5)/"},"frontmatter":{"date":"November 18, 2020","title":"[리액트 튜토리얼] 시간여행 기능 추가(1)","category":"React","draft":false}}},{"node":{"excerpt":"불변성이 중요한 이유 이전 포스트에서 기존 배열을 수정하지 않고  연산자를 사용해서  배열의 사본을 만들었다. 그 이유는 불변성과 관련이 있다. 일반적으로 데이터 변경 시에는 데이터의 값을 직접 변경하거나 원하는 변겨 값을 가진 새로운 사본으로 데이터를 교체하는 방법이 있다. 객체 변경을 통해 데이터 수정하기  객체 변경 없이 데이터 수정 2번의 방법은 …","fields":{"slug":"/react/React_Basic(4)/"},"frontmatter":{"date":"November 17, 2020","title":"[리액트 튜토리얼] 게임 완성하기(2)","category":"React","draft":false}}},{"node":{"excerpt":"게임 완성하기(1) 틱택토 게임을 완성하기 위해서는 현재의 상태처럼 X만 표시되어서는 안되고, X와 O를 번갈아 표시되게 해야한다. state 끌어올리기 현재는 게임의 state를 각각의 Square 컴포넌트에서 유지하고 있지만 승자 확인을 위해서는 각각의 컴포넌트가 아닌 한 곳에 state를 유지할 것이다. 각 Square에 state를 저장하는 것 보…","fields":{"slug":"/react/React_Basic(3)/"},"frontmatter":{"date":"November 15, 2020","title":"[리액트 튜토리얼] 게임 완성하기(1)","category":"React","draft":false}}},{"node":{"excerpt":"초기 코드 보기 위 코드에는 , ,  이라는 세가지 컴포넌트가 있다.  컴포넌트는 을 렌더링하는 컴포넌트이고, 는 9개의 사각형을 렌더링 한다. 마지막으로  컴포넌트는 게임판을 렌더링하고 게임판에 대한 상태 값을 가지고 있다. 지금 코드에는 단순히 렌더링만 할 뿐이고, 어떤 기능을 수행하지는 못하는 코드 상태이다. Props를 통해 데이터 전달하기 의  …","fields":{"slug":"/react/React_Basic(2)/"},"frontmatter":{"date":"November 14, 2020","title":"[리액트 튜토리얼] 튜토리얼 코드 살펴보기","category":"React","draft":false}}},{"node":{"excerpt":"리액트는 무엇일까요? React는 사용자 인터페이스를 구축하기 위한 선언적이고, 효율적이고 유연한 자바스크립트의 라이브러리이다. 리액트를 어떤 프레임워크나 하나의 프로그래밍 언어로 생각하는 사람들도 많은데, 리액트는 라이브러리다. “컴포넌트”라는 작고 고립된 코드의 파편으로 복잡한 UI를 구성하는 것이다.  예를 들어서 의 하위 클래스를 살펴보자. 위처럼…","fields":{"slug":"/react/React_Basic(1)/"},"frontmatter":{"date":"November 13, 2020","title":"[리액트 튜토리얼] React는 무엇일까요?","category":"React","draft":false}}},{"node":{"excerpt":"1번 문제  위 문제는  키워드 유무의 차이를 아는 것이 핵심이다. 나는 처음에 그 핵심에 대해서 인지하지 못해서 1번 보기를 정답으로 선택했는데, 정답은 4번(오류가 발생한다)였다. 자바스크립트에서 함수를 를 써서 호출하였느냐, 아니냐에 따라 차이를 알고있는지가 중요하다. 가 붙어있을 경우 가 함수에 바인딩되지만 가 없이 호출되었을 경우 는 를 바라보게…","fields":{"slug":"/javascript/사전 테스트 리뷰/"},"frontmatter":{"date":"July 03, 2020","title":"자바스크립트 사전 테스트 리뷰","category":"Javascript","draft":false}}},{"node":{"excerpt":"1. DCL GRANT 특정 사용자에게 특정 테이블에 대한 특정 권한을 부여한다. (select, insert, update, delete, references, alter, index, all) WITH GRANT OPTION : 권한을 부여할 수 있는 권한을 부여. 권한 취소하면 모든 권한 회수 됨. WITH ADMIN OPTION : 테이블에 대한 …","fields":{"slug":"/DB/DCL과 TCL/"},"frontmatter":{"date":"May 25, 2020","title":"SQLD - DCL & TCL","category":"DB","draft":false}}},{"node":{"excerpt":"1. DML INSERT 데이터베이스에 데이터를 입력하면 로그파일에 정보를 기록한다. Nologging 옵션은 로그파일 기록을 최소화시켜서 성능을 향상시킨다. Buffer Cache 메모리 영역을 생략하고 기록한다. UPDATE DELETE 테이블의 모든 데이터를 삭제하는 방법은 과 이 있는데, 전자는 삭제해도 테이블 용량은 감소하지 않는 반면, 후자는 …","fields":{"slug":"/DB/DML/"},"frontmatter":{"date":"May 24, 2020","title":"SQLD - DML","category":"DB","draft":false}}},{"node":{"excerpt":"1. 관계연산 선택연산(Selection) : 조건에 맞는 행만 조회 투영연산(Projection) : 조건에 맞는 속성만 조회 결합연산(Join) : 공통된 속성을 통해 새로운 릴레이션 생성 나누기 연산(Division) : 기준 릴레이션에서 나누는 리레이션이 가지고 있는 속성과 동일한 값을 가지는 행을 추출하고 나누는 릴레이션의 속성을 삭제하고 중복된…","fields":{"slug":"/DB/RDB와 DDL/"},"frontmatter":{"date":"May 23, 2020","title":"SQLD - RDB와 DDL","category":"DB","draft":false}}},{"node":{"excerpt":"1. 정규화 데이터 일관성, 중복 제거, 유연성을 위한 방법이다. 중복을 제거하면서 독립성을 확보할 수 있다. 제1정규화부터 제 5정규화까지 있지만 실질적으로 3정규화 까지만 수행한다. 정규화 절차 제1정규화  속성의 원자성 확보 기본키 설정 제2정규화 기본키가 2개 이상의 속성으로 이루어졌다면, 부분 함수 종속성을 제거한다. 제3정규화 기본키를 제외한 …","fields":{"slug":"/DB/데이터 모델과 성능/"},"frontmatter":{"date":"May 22, 2020","title":"SQLD - 데이터 모델과 성능","category":"DB","draft":false}}},{"node":{"excerpt":"1. 데이터 모델링의 이해 데이터 모델링 특징 추상화 - 공통적인 특징으로 간략히 단순화 - 복잡하지않고 누구나 이해하게 명확성 - 모호하지 않고 명확하게 데이터 모델링 단계 개념적 모델링  비즈니스 프로세스 분석 후 업무 전체에 대해 모델링 복잡하지 않게 중요한 부분 위주 개념적 ERD 작성, 기술적인 용어 가급적 사용 X 논리적 모델링  모든 릴레이션…","fields":{"slug":"/DB/데이터모델링/"},"frontmatter":{"date":"May 22, 2020","title":"SQLD - 데이터베이스 모델링","category":"DB","draft":false}}},{"node":{"excerpt":"함수형 프로그래밍 함수형 프로그래밍은 프로그래밍의 여러가지 패러다임 중 하나로, 최근 많은 개발자들로부터 각광받고 있다. 함수형 프로그래밍은 함수의 조합으로 작업을 수행하는 것이다. 그리고 가장 큰 특징은 작업이 이루어지는 동안 필요한 데이터와 상태가 변하지 않는 것이다. 함수형 프로그래밍에 두가지 중요한 함수 개념이 있는데, 먼저 순수 함수(Pure F…","fields":{"slug":"/web/functional_programming/"},"frontmatter":{"date":"May 08, 2020","title":"함수형프로그래밍(Functional Programming)이란?","category":"Web","draft":false}}},{"node":{"excerpt":"Webpack은 앞선 포스트에 소개 했던 Babel과 같이 자바스크립트 개발 환경에 많이 쓰이는 도구이다. Webpack은 무엇이며 어떤 역할을 하는 도구일까? Webpack은 모듈 번들러(Module Bundler)라고 불리는데 모듈 번들러가 무엇인지 앎으로써 Webpack에 대해 알아갈 수 있다.  모듈 번들러 먼저, Module은 프로그램이 있으면 …","fields":{"slug":"/web/webpack/"},"frontmatter":{"date":"May 05, 2020","title":"Webpack 이란 무엇일까?","category":"Web","draft":false}}},{"node":{"excerpt":"Babel은 자바스크립트 개발을 하다보면 자연스럽게 접하게 되는 것인데, Babel이란 무엇일까? Babel의 공식 홈페이지에 보면 매우 간단하게 ” “라고 표현되어있다. 쉽게 말하면 자바스크립트의 컴파일러인 것이다. 그것도 코드를 코드로 바꿔주는  컴파일러이다. 라고 설명하는 이유는 최신의 자바스크립트의 코드들을 babel을 통해서 이전의 자바스크립트로…","fields":{"slug":"/web/babel/"},"frontmatter":{"date":"May 03, 2020","title":"Babel 이란 무엇일까?","category":"Web","draft":false}}},{"node":{"excerpt":"지난 포스트에서 DOM은 무엇이고 어떻게 접근하는지에 대해서 알아보았다. 이번에는 접근한 DOM을 어떻게 다룰 수 있는지에 대해 알아보려고 한다. 1. 텍스트 노드 조작 요소의 텍스트는 텍스트 노드에 저장되어 있고, 텍스트 노드에 접근하기 위해서는 요소 노드인 부모 노드를 거쳐야 한다. 텍스트 노드는 유일한 프로퍼티인 를 가지고 있고 를 이용하여 텍스트를…","fields":{"slug":"/web/DOM(2)/"},"frontmatter":{"date":"April 30, 2020","title":"DOM Manipulation(조작)","category":"Web","draft":false}}},{"node":{"excerpt":"DOM이란 Document Object Model의 약어이다. DOM은 HTML, XML 문서의 프로그래밍 인터페이스라고 할 수 있다. 문서의 구조화된 표현을 제공함으로써 프로그래밍 언어가 DOM 구조에 접근할 수 있도록 해주는 매우 중요한 역할이다. 개발자는 DOM 구조에 접근하여 문서 구조를 바꾸거나 스타일과 내용 등을 변경하고 이벤트를 연결시키는 등…","fields":{"slug":"/web/DOM/"},"frontmatter":{"date":"April 29, 2020","title":"DOM 이란 무엇일까?","category":"Web","draft":false}}},{"node":{"excerpt":"해당 포스트는 ES6이전의 자바스크립트를 기준으로 작성하였습니다. 1. 상속 클래스를 기반으로 하는 상속은 ES6이후에서만 지원하고, 자바스크립트의 객체 프로토타입 체인을 통하여 상속을 구현해 낼 수 있다. 여기서 상속의 구현에는 두가지 방법이 있다. 첫번째는 클래스 기반의 전통적인 상속 방식을 모방하는 것이고, 두번째는 클래스 개념 없이 객체의 프로토타…","fields":{"slug":"/javascript/Javascript_Basic(13)/"},"frontmatter":{"date":"April 28, 2020","title":"자바스크립트의 상속과 캡슐화","category":"Javascript","draft":false}}},{"node":{"excerpt":"크롬 개발자도구는 크롬 브라우저에서 제공하는 툴이다. , , 는 컴파일을 따로 거치지 않고 브라우저에서 런타임으로 동작하는데, 크롬 개발자 도구는 우리가 웹페이지를 효과적으로 분석할 수 있도록 해준다. 웹 개발을 할 때, 매우 유용하고 필수적인 도구라고 할 수 있다. 크롬 개발자 도구를 사용하는 것은 어렵지 않다. 크롬 브라우저에서 버튼을 누르거나 크롬에…","fields":{"slug":"/web/Chrome_Developer_Tool/"},"frontmatter":{"date":"April 25, 2020","title":"크롬 개발자도구 활용하기","category":"Web","draft":false}}},{"node":{"excerpt":"해당 포스트는 ES6이전의 자바스크립트를 기준으로 작성하였습니다. 자바스크립트는 자바스크립트에 존재하는 여러가지 특성을 이용하여 객체지향 언어의 특성을 구현해 낼 수 있다. ES6 이후에는 개념과 상속 개념이 자바스크립트에도 적용되었지만 이전에는 클래스, 생성자, 메서드, 상속, 캡슐화 등이 어떻게 구현되었는지 알아보자. 1. 클래스 기반 언어 vs 프로…","fields":{"slug":"/javascript/Javascript_Basic(12)/"},"frontmatter":{"date":"April 24, 2020","title":"자바스크립트의 OOP","category":"Javascript","draft":false}}},{"node":{"excerpt":"1. 클로저의 개념 다음 코드를 통해 클로저의 개념에 대해 살펴보자. 여기서 는 의 실행이 끝나고 나서 실행된다.  그 말은 곧 실행컨텍스트가 종료되는 것이다. 실행 컨텍스트가 끝난 이후에도  의 변수 객체를 참조할 수 있을까? 답은 참조할 수 있다! 왜냐하면  실행 컨텍스트는 종료되었지만, 변수 객체는 여전이 남아있기 때문이다. 이러한 개념이 클로저이다…","fields":{"slug":"/javascript/Javascript_Basic(11)/"},"frontmatter":{"date":"April 22, 2020","title":"자바스크립트의 클로저","category":"Javascript","draft":false}}},{"node":{"excerpt":"실행컨텍스트란 ‘실행 가능한 코드를 형상화하고 구분하는 추상적인 개념’이라고 ECMAScript에서 설명하고 있다. 바꿔말하면 ‘실행 가능한 자바스크립트 코드 블록이 실행되는 환경’이다. 여기서 말하는 실행 가능한 코드 블록은 대부분 함수라고 볼 수 있다. 실행컨텍스트가 형성되는 경우는 전역 코드, eval() 함수가 실행되는 코드, 함수 안의 코드가 실…","fields":{"slug":"/javascript/Javascript_Basic(10)/"},"frontmatter":{"date":"April 21, 2020","title":"실행 컨텍스트와 스코프체인","category":"Javascript","draft":false}}},{"node":{"excerpt":"자바스크립트에서 프로토타입 개념과 프로토타입 체이닝 개념은 매우 중요한 개념이다. 자바스크립트에서는 프로토타입과 프로토타입 체이닝을 통해 객체지향 프로그래밍을 하기 때문이다. 자바스크립트 초기만해도 다른 언어에는 있는 개념이 없었다. (ES6이후 도입되었다.) 클래스 개념이 존재하지 않았었기 때문에 당시에는 프로토타입 객체를 활용하여 OOP의 상속 개념 …","fields":{"slug":"/javascript/Javascript_Basic(9)/"},"frontmatter":{"date":"April 20, 2020","title":"프로토타입 체이닝","category":"Javascript","draft":false}}},{"node":{"excerpt":"함수의 반환(return) 자바스크립트의 함수는 항상 리턴값을 반환한다. 개발자가 을 별도로 표시하지 않더라도, 일정한 규칙에 따라 리턴 값이 반환된다. 어떤한 규칙이 있는지 살펴보자. 1. 일반함수나 메서드의 경우 일반 함수나 객체의 메서드의 경우에서 을 지정하지 않았을 경우에,  값을 리턴한다. 2. 생성자 함수의 경우 생성자 함수에서 리턴 값을 지정…","fields":{"slug":"/javascript/Javascript_Basic(8)/"},"frontmatter":{"date":"April 17, 2020","title":"함수의 반환(Return)","category":"Javascript","draft":false}}},{"node":{"excerpt":"arguments 객체 자바스크립트는 엄격하지 않기(?)때문에 함수에 인자가 정의되어있을 때, 정의된 인자에 맞추지 않아도 에러가 발생하지 않는다. 처럼 함수가 정의되어 있다고 했을 때, ,, 처럼 호출을 해도 에러가 발생하지 않는다. 다시 말해, 정의된 함수의 인자보다 적게 호출했을때나, 더 많게 호출했을 때도 에러가 발생하지 않는 것이다. 더 적게 호…","fields":{"slug":"/javascript/Javascript_Basic(7)/"},"frontmatter":{"date":"April 17, 2020","title":"함수의 호출과 this","category":"Javascript","draft":false}}},{"node":{"excerpt":"자바스크립트에서 함수는 다양한 형태를 가지고 있다.  일반적인 함수 외에 다른 함수들에 대해서 알아보자. 콜백함수 함수 표현식에서 함수 이름은 Optional한 부분이고, 이름이 붙지않은 함수를 익명 함수라고 하는데, 익명 함수의 대표적인 쓰임은 콜백 함수이다. 콜백 함수는 어떤 이벤트가 발생하거나 어떤 시점에서 호출되는 함수를 말한다. 개발자가 콜백 함…","fields":{"slug":"/javascript/Javascript_Basic(6)/"},"frontmatter":{"date":"April 16, 2020","title":"함수의 다양한 형태","category":"Javascript","draft":false}}},{"node":{"excerpt":"자바스크립트에서 함수는 가장 중요한 개념이라고 할 수 있다. 함수를 얼마나 이해하느냐에 따라 자바스크립트를 얼마나 잘 활용할 수 있을지에 큰 영향을 미친다.  함수 생성 함수를 생성하는 방법은 크게 3가지가 있고 어떠한 방법으로 생성되느냐에 따라 미세한 차이가 있다.  함수선언문 & 리터럴 함수 리터럴 방식과 함수 선언문 방식은 거의 유사하다. 두 방식 …","fields":{"slug":"/javascript/Javascript_Basic(5)/"},"frontmatter":{"date":"April 14, 2020","title":"자바스크립트의 함수","category":"Javascript","draft":false}}},{"node":{"excerpt":"자바스크립트에서도 다른 언어와 동일하게 연산자들이 쓰인다. 그 중에서 자바스크립트에서 주의 깊게 봐야할 몇가지 연산자에 대해서 살펴보자. + 연산자  연산자는 기본적으로 더하기연산과 문자열 연결연산 기능을 수행한다. 둘 다 숫자이면 더하기 연산을 수행하고 대상에 문자열이 포함되면 모두 문자열 연결 연산으로 수행된다.  typeof 연산자 연산자는 피연산자…","fields":{"slug":"/javascript/Javascript_Basic(4)/"},"frontmatter":{"date":"April 13, 2020","title":"자바스크립트의 연산자","category":"Javascript","draft":false}}},{"node":{"excerpt":"프로토타입 자바스크립트의 모든 객체는 자신의 부모 객체와 연결되어 있다. 뿐만 아니라 객체지향의 상속개념과 유사하게 부모 객체의 프로퍼티를 쓸 수 있는 특징이 있다. 이러한 부모 객체를 ‘프로토타입’이라고 한다.  위의 예시 코드를 보면  객체를 생성한 이후에 객체에는 없는  메서드를 호출하여 결과 값을 를 통해 출력한다. 하지만 해당 메서드가 객체에는 …","fields":{"slug":"/javascript/Javascript_Basic(3)/"},"frontmatter":{"date":"April 13, 2020","title":"프로토타입과 배열","category":"Javascript","draft":false}}},{"node":{"excerpt":"자바스크립트에서 변수를 선언할 때 , ,  등을 사용하곤 한다. 셋의 차이를 정확하게 아는 것이 변수를 활용하는 데 있어 도움이 될 것이다.  Vs  기본적으로 예전의 자바스크립트 버전에서는 변수 선언 시 선택권이 없이 오직 만 사용 가능했다. 다른 언어와 다르게 데이터 타입을 명시하지 않은 채로 선언할 수 있었기 때문에 어떻게 보면 매우 융통성(?)있고…","fields":{"slug":"/javascript/different_with_var_let_const/"},"frontmatter":{"date":"April 11, 2020","title":"let, const, var 의 차이는?","category":"Javascript","draft":false}}},{"node":{"excerpt":"자바스크립트의 객체 이전 포스트에서 언급했던 것과 같이 자바스크립트에서 null과 undefined를 제외한 모든 것은 객체로 표현될 수 있다. 그만큼 객체의 활용과 객체의 특성에 대해서 제대로 이해하는 것이 중요하다.  객체의 생성 자바스크립트에서는 객체를 생성하는 방법이 크게 세가지가 있다. 첫번째는  객체 생성자 함수를 이용하는 방법, 두번째는 객체…","fields":{"slug":"/javascript/Javascript_Basic(2)/"},"frontmatter":{"date":"April 09, 2020","title":"자바스크립트의 객체","category":"Javascript","draft":false}}},{"node":{"excerpt":"자바스크립트 자바스크립트는 웹 브라우저에서 동작하는 스크립트 언어이다. 초기에는 자바스크립트가 크게 주목받지 못했고, 단순히 HTML, CSS 기반의 웹에서 간단한 상호작용이나 효과를 담당하는 역할에 국한되어 있었다. 하지만 웹이 발전하면서 서버에서 담당하던 역할을 웹 브라우저가 담당하면서 자바스크립트의 역할은 크게 확대되었다. 현재 자바스크립트는 가장 …","fields":{"slug":"/javascript/Javasciprt_Basic(1)/"},"frontmatter":{"date":"April 09, 2020","title":"자바스크립트의 핵심개념과 데이터타입","category":"Javascript","draft":false}}},{"node":{"excerpt":"기존에 Jekyll을 이용해 블로그를 운영했었다. 대학시절 오픈소스 수업을 들으며 만들었었는데, 한동안 열심히 포스팅하고 블로그 꾸미기도 하고, 구글 애널리틱스를 붙이는 등 한때 공들였었다. 하지만 취준과 취업 기간동안 동력을 잃고 유령 블로그가 되어버렸다. 근데 신기한 건 아직도 구글 애널리틱스의 정기적인 분석 보고 메일을 받으면 관리하지 않고 있음에도…","fields":{"slug":"/web/blog_with_gatsby/"},"frontmatter":{"date":"April 07, 2020","title":"Gatsby JS로 블로그 시작하기","category":"Web","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["3128451518","521680639"]}