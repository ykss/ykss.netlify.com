{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/about_type/","result":{"data":{"site":{"siteMetadata":{"title":"Ykss","author":"[Ykss]","siteUrl":"https://ykss.netlify.app","comment":{"disqusShortName":"","utterances":"ykss/ykss.netlify.com"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"63ba1c11-804b-569f-a931-1d4181d3e167","excerpt":"1. 원시 타입(primitive type) boolean number string null undefined 원시 값을 변수에 할당하면 값이 복사되어 들어간다. 즉, 원시값이 할당된 변수는 자기 자신의 고유한 값을 가지게 된다. typeof 원시 값의 종류를 알 수 있는 메서드이지만, null의 경우 타입을 주의해야 한다. null을 typeof 할 경우 object로 나오기 때문에 `value === null`과 같이 확인해야 한다. 2. 참조 타입(reference type…","html":"<h2 id=\"1-원시-타입primitive-type\" style=\"position:relative;\"><a href=\"#1-%EC%9B%90%EC%8B%9C-%ED%83%80%EC%9E%85primitive-type\" aria-label=\"1 원시 타입primitive type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 원시 타입(primitive type)</h2>\n<ul>\n<li>boolean</li>\n<li>number</li>\n<li>string</li>\n<li>null</li>\n<li>undefined</li>\n</ul>\n<p>원시 값을 변수에 할당하면 값이 복사되어 들어간다. 즉, 원시값이 할당된 변수는 자기 자신의 고유한 값을 가지게 된다.</p>\n<h3 id=\"typeof\" style=\"position:relative;\"><a href=\"#typeof\" aria-label=\"typeof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typeof</h3>\n<p>원시 값의 종류를 알 수 있는 메서드이지만, null의 경우 타입을 주의해야 한다.</p>\n<p>null을 typeof 할 경우 object로 나오기 때문에 `value === null`과 같이 확인해야 한다.</p>\n<h2 id=\"2-참조-타입reference-type\" style=\"position:relative;\"><a href=\"#2-%EC%B0%B8%EC%A1%B0-%ED%83%80%EC%9E%85reference-type\" aria-label=\"2 참조 타입reference type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 참조 타입(reference type)</h2>\n<ul>\n<li>객체 : {}</li>\n<li>배열 : []</li>\n<li>함수 : function</li>\n<li>Date</li>\n<li>정규표현식 : RegExp</li>\n</ul>\n<p>=>원시타입을 제외하면 모두 참조타입이다.</p>\n<p>참조 타입은 변수의 값을 직접 저장하지 않고 메모리 안에서 객체의 위치를 가르키는 포인터를 저장한다. 값을 저장하는지 위치를 저장하는지가 가장 큰 차이이다.</p>\n<h2 id=\"3-원시-래퍼-타입\" style=\"position:relative;\"><a href=\"#3-%EC%9B%90%EC%8B%9C-%EB%9E%98%ED%8D%BC-%ED%83%80%EC%9E%85\" aria-label=\"3 원시 래퍼 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 원시 래퍼 타입</h2>\n<ul>\n<li>String</li>\n<li>Number</li>\n<li>Boolean</li>\n</ul>\n<p>원시 래퍼 타입은 원시 타입을 객체처럼 편리하게 사용하도록 도와준다. 원시 타입을 객체처럼 사용하면 자바스크립트 내부에서 데이터의 인스턴스를 만들고 코드 실행 후에 바로 제거한다. 이러한 과정을 오토 박싱(autoboxing)이라고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"bit\"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"coin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"bit\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"coin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntemp <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>자바스크립트에서는 위와 같은 과정을 거쳐서 원시 타입을 마치 객체처럼 메서드를 사용할 수 있게 해준다.</p>","frontmatter":{"title":"자바스크립트 타입 정리 (원시, 참조, 원시래퍼)","date":"March 18, 2022","thumbnail":null}}},"pageContext":{"slug":"/javascript/about_type/","previous":{"fields":{"slug":"/javascript/about_this/"},"frontmatter":{"title":"this 파헤치기 (call, apply, bind)","category":"Javascript","draft":false}},"next":{"fields":{"slug":"/javascript/about_hoisting/"},"frontmatter":{"title":"JS 호이스팅 다시 살펴보기","category":"Javascript","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}